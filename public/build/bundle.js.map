{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/empresaData.js","../../src/ShaderToy.svelte","../../src/V.shader.js","../../node_modules/svelte/store/index.mjs","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","export default {\r\n  tipos: [\r\n    {\r\n      tipo: \"Persona Física\",\r\n      descripcion:\r\n        \"Una empresa de tipo persona física es una forma de organización empresarial en la que un individuo, conocido como persona física o trabajador independiente, realiza actividades económicas con fines de lucro sin constituirse formalmente como una sociedad o compañía. En este tipo de empresa, el propietario es la misma persona que opera el negocio, y no existe una entidad separada entre el empresario y la empresa\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir actividad comercial\",\r\n          descripcion: \"Determine la actividad que la empresa desarrollará.\",\r\n          documentos: [\r\n            \"Definición de actividades comerciales\",\r\n            \"Plan de negocio (recomendado)\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Identifique el producto o servicio que ofrecerá.\",\r\n              detalle: [\r\n                \"Investigue las necesidades del mercado local: consulte con expertos de la industria, lea reportes y participe en foros especializados para entender qué necesidades existen en su área de interés.\",\r\n                \"Contacte a posibles clientes para comprender sus necesidades y asegúrese de tener preparada una lista de preguntas claras: haga preguntas específicas como '¿Qué problemas enfrenta actualmente que este producto podría resolver?' y anote las respuestas para ajustar su propuesta de valor.\",\r\n                \"Prepare una descripción detallada del producto o servicio, destacando sus beneficios: utilice un lenguaje sencillo y enfocado en los beneficios clave, como el ahorro de tiempo o el aumento de eficiencia.\",\r\n              ],\r\n              caveats: [\r\n                \"Asegúrese de que la actividad comercial no esté limitada por ninguna disposición legal y cumpla con las normativas locales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Realice un estudio de mercado para evaluar la demanda.\",\r\n              detalle: [\r\n                \"Contrate un analista de mercado o contacte con la cámara de comercio local para recibir asesoría: asegúrese de explicar claramente el tipo de información que necesita sobre su mercado objetivo.\",\r\n                \"Prepare una encuesta con preguntas clave sobre el interés de los consumidores en el producto o servicio: haga preguntas cerradas y abiertas para recopilar una amplia variedad de opiniones.\",\r\n                \"Presente los resultados de la encuesta en forma de gráficos para comprender mejor las tendencias: utilice herramientas como Excel o Google Sheets para crear gráficos visuales que resuman los resultados y facilite su interpretación.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Defina cómo se diferenciará de la competencia.\",\r\n              detalle: [\r\n                \"Haga una lista de competidores directos e indirectos y estudie sus ofertas: analice los puntos débiles y fuertes de cada competidor, visitando sus sitios web o tiendas físicas y recopilando datos relevantes.\",\r\n                \"Prepare una tabla comparativa destacando áreas donde su empresa puede mejorar lo que ofrece la competencia: incluya características como precio, calidad, servicio al cliente y tiempo de entrega.\",\r\n                \"Conéctese con clientes potenciales para conocer sus experiencias previas con la competencia y qué mejoras desean ver: ofrezca incentivos como descuentos o muestras gratuitas para motivar a los clientes a compartir sus opiniones honestas.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción Tributaria\",\r\n          descripcion:\r\n            \"Registre su empresa como contribuyente ante el Ministerio de Hacienda usando el formulario D-140.\",\r\n          documentos: [\r\n            \"Formulario D-140\",\r\n            \"Documento de identificación (cédula)\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso:\r\n                \"Complete el formulario D-140 con sus datos personales y los de la empresa.\",\r\n              detalle: [\r\n                \"Visite la página oficial del Ministerio de Hacienda para descargar el formulario: asegúrese de ingresar al sitio correcto verificando el URL.\",\r\n                \"Prepare la información básica como nombre completo, número de cédula, dirección y detalles de la actividad comercial: tenga a mano su cédula y cualquier otra identificación pertinente para facilitar el proceso.\",\r\n                \"Revise cuidadosamente los campos requeridos antes de enviar el formulario para evitar errores: compare los datos ingresados con sus documentos oficiales para asegurar la exactitud.\",\r\n              ],\r\n              caveats: [\r\n                \"Es fundamental realizar la inscripción en el Registro Mercantil antes de la inscripción tributaria, ya que este es un requisito previo para operar legalmente.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Presente el formulario en la oficina del Ministerio de Hacienda más cercana.\",\r\n              detalle: [\r\n                \"Localice la oficina más cercana y verifique su horario de atención (generalmente de lunes a viernes de 8:00 am a 4:00 pm): utilice Google Maps para encontrar la ubicación y planifique su visita con anticipación.\",\r\n                \"Lleve consigo el formulario completo y una copia de su documento de identificación: organice los documentos en una carpeta para facilitar su acceso al momento de entregarlos.\",\r\n                \"Al llegar, indique que desea registrar su empresa como contribuyente y entregue la documentación al funcionario: sea claro y conciso al explicar su solicitud para evitar confusiones.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga el comprobante de inscripción.\",\r\n              detalle: [\r\n                \"Solicite el comprobante al funcionario luego de la revisión del formulario: pregunte si hay alguna recomendación adicional para futuras gestiones.\",\r\n                \"Guarde el comprobante en un lugar seguro, ya que es un documento importante para futuras gestiones tributarias: utilice una carpeta específica para documentos de la empresa.\",\r\n                \"Escanee el comprobante y guárdelo en formato digital para tener un respaldo: use una aplicación de escaneo en su teléfono móvil para crear una copia digital rápidamente.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Obtención de Permisos y Licencias\",\r\n          descripcion:\r\n            \"Solicite el Permiso Sanitario de Funcionamiento al Ministerio de Salud si aplica, y la patente municipal en la municipalidad correspondiente.\",\r\n          documentos: [\r\n            \"Permiso Sanitario del Ministerio de Salud\",\r\n            \"Patente Municipal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso:\r\n                \"Llene el formulario de solicitud del Permiso Sanitario en el sitio web del Ministerio de Salud.\",\r\n              detalle: [\r\n                \"Visite la página oficial del Ministerio de Salud y busque la sección de permisos: use la barra de búsqueda para agilizar la navegación en el sitio web.\",\r\n                \"Complete la información requerida, incluyendo la descripción detallada de las instalaciones de la empresa: asegúrese de incluir detalles sobre la infraestructura, medidas de seguridad y protocolos sanitarios.\",\r\n                \"Prepare la información sobre el uso del inmueble y adjúde el contrato de arrendamiento si corresponde: tenga una copia digital del contrato lista para ser subida al formulario.\",\r\n              ],\r\n              caveats: [\r\n                \"El uso del inmueble debe estar acorde con las regulaciones municipales y cumplir con las normativas de salud y seguridad requeridas para la actividad comercial.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Adjunte los documentos requeridos, incluyendo el plan de negocio.\",\r\n              detalle: [\r\n                \"Prepare una copia del plan de negocio y cualquier otro documento requerido, como planos del local: verifique que los documentos estén actualizados y completos.\",\r\n                \"Verifique que todos los archivos estén en formato PDF y que la calidad de la imagen sea clara: use un escáner de buena calidad para asegurar que los documentos sean legibles.\",\r\n                \"Suba los archivos al formulario online y espere la confirmación de recepción: revise que todos los archivos se hayan cargado correctamente antes de enviar la solicitud.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la solicitud y espere la aprobación.\",\r\n              detalle: [\r\n                \"Una vez completado el formulario, haga clic en enviar y tome nota del número de solicitud: guarde este número para poder hacer seguimiento en caso de retrasos.\",\r\n                \"Espere una respuesta por correo electrónico o consulte el estado en el sitio web del Ministerio de Salud: marque el correo del Ministerio como seguro para no perder la notificación.\",\r\n                \"Si se requiere algún documento adicional, prepárelo y entréguelo a la brevedad para evitar retrasos: contacte al funcionario asignado si tiene alguna duda sobre los requerimientos adicionales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Diríjase a la municipalidad correspondiente para solicitar la patente municipal.\",\r\n              detalle: [\r\n                \"Localice la municipalidad correspondiente y verifique el horario de atención: llame previamente para confirmar la documentación y asegurarse de que la oficina esté abierta.\",\r\n                \"Lleve consigo los documentos necesarios, incluidos el Permiso Sanitario aprobado y el formulario de solicitud de patente: ordene los documentos de acuerdo con los requisitos para facilitar el proceso.\",\r\n                \"Explique al funcionario que desea solicitar la patente para operar un negocio y entregue la documentación: sea paciente y proporcione cualquier información adicional que se le solicite.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Empresa Activa\",\r\n          descripcion:\r\n            \"Realice las gestiones necesarias para mantener la empresa activa y en cumplimiento de sus obligaciones legales y fiscales.\",\r\n          documentos: [\r\n            \"Certificados de cumplimiento tributario\",\r\n            \"Comprobante de pagos de la Caja Costarricense de Seguro Social (CCSS)\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones Tributarias Mensuales\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda para presentar la declaración de impuestos: asegúrese de utilizar su número de cédula y contraseña para ingresar.\",\r\n                \"Complete la declaración con los ingresos y gastos del mes: asegúrese de tener todos los recibos y facturas organizados para facilitar este proceso.\",\r\n                \"Pague el impuesto correspondiente antes de la fecha límite (generalmente el último día del mes): puede realizar el pago a través de transferencia bancaria o en cualquier banco autorizado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pago de la Caja Costarricense de Seguro Social (CCSS)\",\r\n              detalle: [\r\n                \"Calcule las cargas sociales que debe pagar cada mes en base a los salarios pagados: este cálculo puede hacerlo a través del sistema en línea de la CCSS.\",\r\n                \"Visite el portal de la CCSS o un banco autorizado para realizar el pago de las cargas sociales: el pago debe hacerse antes del día 15 de cada mes.\",\r\n                \"Guarde el comprobante de pago como respaldo para futuras auditorías o revisiones.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de Permisos y Licencias\",\r\n              detalle: [\r\n                \"Revise las fechas de vencimiento del Permiso Sanitario y la patente municipal: estos permisos generalmente se deben renovar anualmente.\",\r\n                \"Visite la municipalidad y el Ministerio de Salud para presentar los documentos requeridos para la renovación: incluya una copia del permiso anterior y un comprobante de pago de impuestos municipales.\",\r\n                \"Pague las tarifas correspondientes y espere la aprobación de la renovación: asegúrese de guardar los comprobantes de pago y las nuevas licencias.\",\r\n              ],\r\n              caveats: [\r\n                \"Si no se renuevan los permisos a tiempo, la empresa podría enfrentar sanciones o incluso el cierre temporal.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Sociedad Anónima\",\r\n      descripcion:\r\n        \"Una empresa de tipo Sociedad Anónima (S.A.) es una forma de organización empresarial que constituye una entidad legal separada de sus propietarios, conocida como una persona jurídica. En una Sociedad Anónima, la propiedad de la empresa se divide en acciones, que pueden ser compradas, vendidas o transferidas libremente entre los accionistas.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir Nombre de la Empresa\",\r\n          descripcion:\r\n            \"Verifique la disponibilidad del nombre de la empresa en el Registro Nacional.\",\r\n          documentos: [\"Certificación de disponibilidad de nombre\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Visite el sitio web del Registro Nacional.\",\r\n              detalle: [\r\n                \"Ingrese a la página oficial del Registro Nacional: asegúrese de que el sitio web sea legítimo y seguro.\",\r\n                \"Busque la opción de consulta de nombres de sociedades: puede utilizar la barra de navegación o la sección de 'Trámites en Línea'.\",\r\n                \"Asegúrese de que el nombre deseado no esté registrado por otra empresa: intente varias alternativas por si el nombre deseado ya está tomado.\",\r\n              ],\r\n              caveats: [\r\n                \"El nombre debe ser único y no prestarse a confusión con otras sociedades existentes. Asegúrese de cumplir con las normas establecidas para la denominación de sociedades en el Registro Nacional.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Realice una consulta de disponibilidad de nombre.\",\r\n              detalle: [\r\n                \"Ingrese el nombre propuesto para la empresa en la barra de búsqueda: asegúrese de escribirlo correctamente para evitar errores en la búsqueda.\",\r\n                \"Espere los resultados de la consulta y revise posibles coincidencias: tome nota de cualquier nombre similar que pueda generar confusión.\",\r\n                \"Si el nombre está disponible, continúe con el proceso de registro: tome una captura de pantalla del resultado como respaldo.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Solicite la certificación para reservar el nombre.\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud para reservar el nombre: asegúrese de ingresar toda la información correctamente.\",\r\n                \"Presente el formulario en la oficina del Registro Nacional o envíelo electrónicamente: si lo hace en persona, verifique el horario de atención.\",\r\n                \"Pague la tarifa correspondiente para garantizar la reserva del nombre: guarde el recibo de pago como comprobante.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Elaborar Acta Constitutiva\",\r\n          descripcion:\r\n            \"Redacte el acta constitutiva con la asistencia de un abogado, que incluya información sobre los accionistas, capital social y administración.\",\r\n          documentos: [\r\n            \"Acta Constitutiva\",\r\n            \"Identificación de los accionistas\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso:\r\n                \"Contrate a un abogado para la redacción del acta constitutiva.\",\r\n              detalle: [\r\n                \"Busque un abogado especializado en derecho corporativo: solicite recomendaciones a colegas o busque en directorios de abogados certificados.\",\r\n                \"Contacte al abogado y programe una reunión para discutir los detalles de la sociedad: prepare una lista de preguntas sobre el proceso y costos involucrados.\",\r\n                \"Asegúrese de llevar información de los accionistas, incluyendo nombres completos y copias de identificación: confirme que cada accionista tenga sus documentos en regla.\",\r\n              ],\r\n              caveats: [\r\n                \"Es obligatorio que el acta constitutiva esté autenticada por un notario público para que tenga validez legal.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Incluya información detallada sobre los accionistas y el capital inicial.\",\r\n              detalle: [\r\n                \"Especifique la cantidad de acciones y la participación de cada socio: defina claramente cómo se dividirán las ganancias y responsabilidades.\",\r\n                \"Defina el monto del capital social y cómo será distribuido: asegúrese de que todos los accionistas estén de acuerdo con la distribución propuesta.\",\r\n                \"Incluya la información de contacto de cada socio y sus responsabilidades: verifique que cada socio entienda sus responsabilidades y esté dispuesto a cumplirlas.\",\r\n              ],\r\n              caveats: [\r\n                \"Asegúrese de que el capital social mínimo cumpla con los requisitos legales establecidos para sociedades anónimas.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Firme el documento ante notario.\",\r\n              detalle: [\r\n                \"Coordine una cita con el abogado y un notario para firmar el acta: confirme la disponibilidad de todos los socios antes de fijar la fecha.\",\r\n                \"Asegúrese de que todos los socios estén presentes y lleven identificación: revise los requisitos del notario para asegurarse de cumplirlos.\",\r\n                \"El notario autenticará las firmas y dará fe de la validez del documento: solicite una copia certificada del documento para cada socio.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Nacional\",\r\n          descripcion:\r\n            \"Registre la sociedad anónima en el Registro Nacional para formalizar la empresa.\",\r\n          documentos: [\r\n            \"Acta Constitutiva autenticada\",\r\n            \"Certificación de disponibilidad de nombre\",\r\n            \"Identificación de los accionistas\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Complete el formulario de inscripción.\",\r\n              detalle: [\r\n                \"Visite la oficina del Registro Nacional o su sitio web para obtener el formulario de inscripción.\",\r\n                \"Complete toda la información requerida sobre los accionistas y la empresa: asegúrese de que los datos sean precisos.\",\r\n                \"Adjunte todos los documentos necesarios, incluyendo el acta constitutiva autenticada y la certificación de nombre.\",\r\n              ],\r\n              caveats: [\r\n                \"Todos los documentos presentados deben ser originales o copias autenticadas para evitar demoras en el proceso de inscripción.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la documentación en el Registro Nacional.\",\r\n              detalle: [\r\n                \"Presente todos los documentos en la oficina del Registro Nacional: verifique el horario de atención para evitar inconvenientes.\",\r\n                \"Pague las tarifas correspondientes al registro de la sociedad: conserve el recibo de pago como comprobante.\",\r\n                \"Espere la revisión de la documentación por parte del Registro Nacional: ellos le indicarán si hay algún problema o si se requiere algún documento adicional.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga la personería jurídica.\",\r\n              detalle: [\r\n                \"Una vez aprobado el registro, solicite una copia de la personería jurídica: este documento es necesario para realizar otras gestiones a nombre de la empresa.\",\r\n                \"Guarde la personería jurídica en un lugar seguro: también puede optar por tener una copia digital.\",\r\n                \"Utilice la personería jurídica para abrir cuentas bancarias y llevar a cabo otras gestiones legales en nombre de la sociedad.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Constitución de la Sociedad Anónima\",\r\n          descripcion:\r\n            \"Formalice la creación de la sociedad anónima mediante escritura pública ante un notario y registre los estatutos en el Registro Nacional.\",\r\n          documentos: [\r\n            \"Escritura de constitución de la sociedad\",\r\n            \"Estatutos de la sociedad\",\r\n            \"Lista de accionistas\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Redacción de los Estatutos\",\r\n              detalle: [\r\n                \"Contrate a un abogado para redactar los estatutos de la sociedad, que incluyan el nombre, objeto social, capital social, y estructura de la administración.\",\r\n                \"Reúnase con los socios para acordar los términos de los estatutos y asegurarse de que todos estén de acuerdo con las condiciones establecidas.\",\r\n                \"Una vez aprobados, firme los estatutos ante un notario público para darles validez legal.\",\r\n              ],\r\n              caveats: [\r\n                \"Los estatutos deben cumplir con todas las disposiciones legales y ser inscritos correctamente en el Registro Nacional para evitar problemas legales futuros.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Registro en el Registro Nacional\",\r\n              detalle: [\r\n                \"Visite el Registro Nacional o utilice su portal en línea para presentar la escritura de constitución y los estatutos.\",\r\n                \"Complete el formulario de inscripción y pague las tasas correspondientes al registro de la sociedad.\",\r\n                \"Espere la confirmación del Registro Nacional y guarde el documento de personería jurídica.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción Tributaria\",\r\n          descripcion:\r\n            \"Registre la sociedad como contribuyente ante el Ministerio de Hacienda y obtenga el Número de Identificación Tributaria (NIT).\",\r\n          documentos: [\r\n            \"Formulario D-140\",\r\n            \"Documento de identidad del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Registro en el Ministerio de Hacienda\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda y complete el formulario D-140 con los datos de la sociedad.\",\r\n                \"Adjunte los documentos requeridos, como la cédula del representante legal y la escritura de constitución.\",\r\n                \"Espere la confirmación del registro y obtenga el NIT, que se usará para todos los trámites tributarios.\",\r\n              ],\r\n              caveats: [\r\n                \"El NIT es obligatorio para cualquier actividad comercial de la sociedad y debe ser obtenido antes de iniciar operaciones.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Apertura de Cuenta Bancaria\",\r\n          descripcion:\r\n            \"Abra una cuenta bancaria a nombre de la sociedad para manejar sus operaciones financieras.\",\r\n          documentos: [\r\n            \"Escritura de constitución\",\r\n            \"Personería jurídica\",\r\n            \"Cédula del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Contactar al Banco\",\r\n              detalle: [\r\n                \"Seleccione un banco que ofrezca condiciones adecuadas para la cuenta empresarial y comuníquese con un asesor.\",\r\n                \"Solicite una cita para la apertura de la cuenta: explique que se trata de una sociedad anónima recién constituida y que necesita una cuenta para sus operaciones.\",\r\n                \"Prepare los documentos requeridos y preséntese el día de la cita en la sucursal bancaria seleccionada.\",\r\n              ],\r\n              caveats: [\r\n                \"Cada banco tiene sus propios requisitos para la apertura de cuentas corporativas. Consulte previamente para asegurarse de cumplir con todos los requisitos.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Apertura de la Cuenta\",\r\n              detalle: [\r\n                \"Complete los formularios del banco para la apertura de la cuenta: asegúrese de proporcionar toda la información de la sociedad, incluyendo el NIT y la personería jurídica.\",\r\n                \"Deposite el monto mínimo requerido para abrir la cuenta, si aplica: este monto puede variar según el banco.\",\r\n                \"Guarde todos los comprobantes relacionados con la apertura de la cuenta, ya que serán necesarios para futuras transacciones.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Sociedad Activa\",\r\n          descripcion:\r\n            \"Cumpla con las obligaciones fiscales y administrativas para mantener la sociedad en regla.\",\r\n          documentos: [\r\n            \"Certificados de cumplimiento tributario\",\r\n            \"Comprobante de pagos de la CCSS\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones Tributarias Mensuales\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda para presentar la declaración de impuestos mensuales: use el NIT para ingresar.\",\r\n                \"Complete la declaración con los ingresos y gastos de la sociedad: tenga a mano los libros contables y facturas.\",\r\n                \"Pague el impuesto antes de la fecha límite para evitar multas: puede realizar el pago en línea o en un banco autorizado.\",\r\n              ],\r\n              caveats: [\r\n                \"El incumplimiento de las obligaciones fiscales puede resultar en sanciones y multas, así como la suspensión del NIT.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pago de la CCSS\",\r\n              detalle: [\r\n                \"Calcule las cargas sociales mensuales en base a los salarios de los empleados: este cálculo puede hacerse a través del sistema en línea de la CCSS.\",\r\n                \"Realice el pago de las cargas sociales antes del día 15 de cada mes: puede hacer el pago en línea o en un banco autorizado.\",\r\n                \"Guarde el comprobante del pago como respaldo para auditorías.\",\r\n              ],\r\n              caveats: [\r\n                \"El no pago de las cargas sociales puede generar multas y restricciones para operar legalmente.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de Permisos y Licencias\",\r\n              detalle: [\r\n                \"Revise las fechas de vencimiento de los permisos y patentes de la sociedad: generalmente se renuevan anualmente.\",\r\n                \"Visite la municipalidad y el Ministerio de Salud para renovar los permisos: presente el comprobante de pago de impuestos y otros documentos requeridos.\",\r\n                \"Pague las tarifas correspondientes y guarde los comprobantes.\",\r\n              ],\r\n              caveats: [\r\n                \"El no renovar los permisos y licencias a tiempo puede llevar a la suspensión de la actividad comercial de la sociedad.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Reportes Financieros Anuales\",\r\n              detalle: [\r\n                \"Contrate a un contador para preparar los estados financieros anuales de la sociedad.\",\r\n                \"Presente el reporte anual de ingresos y gastos al Ministerio de Hacienda antes del 31 de marzo: esto se puede hacer a través del portal ATV o con ayuda del contador.\",\r\n                \"Asegúrese de cumplir con todas las normativas contables y fiscales para evitar sanciones.\",\r\n              ],\r\n              caveats: [\r\n                \"Los reportes financieros deben cumplir con las Normas Internacionales de Información Financiera (NIIF) para evitar problemas legales y garantizar la transparencia.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Sociedad de Responsabilidad Limitada (S.R.L.)\",\r\n      descripcion:\r\n        \"Una empresa de tipo Sociedad de Responsabilidad Limitada (S.R.L.) es una forma de organización empresarial que combina características de las sociedades de personas y las sociedades de capital, proporcionando a los socios la ventaja de responsabilidad limitada y una gestión más simplificada en comparación con una Sociedad Anónima (S.A.). Es una opción común para pequeñas y medianas empresas (PYMES) que desean limitar la responsabilidad de los socios sin las complejidades de una gran corporación.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir Nombre de la Empresa\",\r\n          descripcion:\r\n            \"Verifique la disponibilidad del nombre de la empresa en el Registro Nacional.\",\r\n          documentos: [\"Certificación de disponibilidad de nombre\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Visite el sitio web del Registro Nacional.\",\r\n              detalle: [\r\n                \"Ingrese a la página oficial del Registro Nacional: asegúrese de que el sitio web sea legítimo y seguro.\",\r\n                \"Busque la opción de consulta de nombres de sociedades: puede utilizar la barra de navegación o la sección de 'Trámites en Línea'.\",\r\n                \"Asegúrese de que el nombre deseado no esté registrado por otra empresa: intente varias alternativas por si el nombre deseado ya está tomado.\",\r\n              ],\r\n              caveats: [\r\n                \"El nombre de la empresa no debe ser igual o similar a uno ya registrado, para evitar problemas legales o de confusión en el mercado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Realice una consulta de disponibilidad de nombre.\",\r\n              detalle: [\r\n                \"Ingrese el nombre propuesto para la empresa en la barra de búsqueda: asegúrese de escribirlo correctamente para evitar errores en la búsqueda.\",\r\n                \"Espere los resultados de la consulta y revise posibles coincidencias: tome nota de cualquier nombre similar que pueda generar confusión.\",\r\n                \"Si el nombre está disponible, continúe con el proceso de registro: tome una captura de pantalla del resultado como respaldo.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Solicite la certificación para reservar el nombre.\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud para reservar el nombre: asegúrese de ingresar toda la información correctamente.\",\r\n                \"Presente el formulario en la oficina del Registro Nacional o envíelo electrónicamente: si lo hace en persona, verifique el horario de atención.\",\r\n                \"Pague la tarifa correspondiente para garantizar la reserva del nombre: guarde el recibo de pago como comprobante.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Elaborar el Pacto Social\",\r\n          descripcion:\r\n            \"Redacte el pacto social de la S.R.L. con la asistencia de un abogado, incluyendo información sobre los socios, el capital social y la administración.\",\r\n          documentos: [\"Pacto Social\", \"Identificación de los socios\"],\r\n          subpasos: [\r\n            {\r\n              subpaso:\r\n                \"Contrate a un abogado para la redacción del pacto social.\",\r\n              detalle: [\r\n                \"Busque un abogado especializado en derecho corporativo: solicite recomendaciones a colegas o busque en directorios de abogados certificados.\",\r\n                \"Contacte al abogado y programe una reunión para discutir los detalles de la sociedad: prepare una lista de preguntas sobre el proceso y costos involucrados.\",\r\n                \"Asegúrese de llevar información de los socios, incluyendo nombres completos y copias de identificación: confirme que cada socio tenga sus documentos en regla.\",\r\n              ],\r\n              caveats: [\r\n                \"Es obligatorio que el pacto social sea redactado por un abogado especializado en derecho corporativo para garantizar el cumplimiento de la legislación vigente.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Incluya información detallada sobre los socios y el capital inicial.\",\r\n              detalle: [\r\n                \"Especifique la participación de cada socio: defina claramente cómo se dividirán las ganancias y responsabilidades.\",\r\n                \"Defina el monto del capital social y cómo será distribuido: asegúrese de que todos los socios estén de acuerdo con la distribución propuesta.\",\r\n                \"Incluya la información de contacto de cada socio y sus responsabilidades: verifique que cada socio entienda sus responsabilidades y esté dispuesto a cumplirlas.\",\r\n              ],\r\n              caveats: [\r\n                \"El capital social debe ser suficiente para cubrir las responsabilidades iniciales de la sociedad, y todos los socios deben estar de acuerdo con la distribución.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Firme el documento ante notario.\",\r\n              detalle: [\r\n                \"Coordine una cita con el abogado y un notario para firmar el pacto social: confirme la disponibilidad de todos los socios antes de fijar la fecha.\",\r\n                \"Asegúrese de que todos los socios estén presentes y lleven identificación: revise los requisitos del notario para asegurarse de cumplirlos.\",\r\n                \"El notario autenticará las firmas y dará fe de la validez del documento: solicite una copia certificada del documento para cada socio.\",\r\n              ],\r\n              caveats: [\r\n                \"La firma ante notario es esencial para darle validez legal al pacto social y garantizar que todos los socios estén debidamente representados.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Nacional\",\r\n          descripcion:\r\n            \"Registre la S.R.L. en el Registro Nacional para formalizar la empresa.\",\r\n          documentos: [\r\n            \"Pacto Social autenticado\",\r\n            \"Certificación de disponibilidad de nombre\",\r\n            \"Identificación de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Complete el formulario de inscripción.\",\r\n              detalle: [\r\n                \"Visite la oficina del Registro Nacional o su sitio web para obtener el formulario de inscripción.\",\r\n                \"Complete toda la información requerida sobre los socios y la empresa: asegúrese de que los datos sean precisos.\",\r\n                \"Adjunte todos los documentos necesarios, incluyendo el pacto social autenticado y la certificación de nombre.\",\r\n              ],\r\n              caveats: [\r\n                \"Es imprescindible adjuntar todos los documentos requeridos para evitar demoras en el proceso de inscripción.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la documentación en el Registro Nacional.\",\r\n              detalle: [\r\n                \"Presente todos los documentos en la oficina del Registro Nacional: verifique el horario de atención para evitar inconvenientes.\",\r\n                \"Pague las tarifas correspondientes al registro de la sociedad: conserve el recibo de pago como comprobante.\",\r\n                \"Espere la revisión de la documentación por parte del Registro Nacional: ellos le indicarán si hay algún problema o si se requiere algún documento adicional.\",\r\n              ],\r\n              caveats: [\r\n                \"El registro no será efectivo hasta que se paguen todas las tarifas correspondientes y se presente toda la documentación requerida.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga la personería jurídica.\",\r\n              detalle: [\r\n                \"Una vez aprobado el registro, solicite una copia de la personería jurídica: este documento es necesario para realizar otras gestiones a nombre de la empresa.\",\r\n                \"Guarde la personería jurídica en un lugar seguro: también puede optar por tener una copia digital.\",\r\n                \"Utilice la personería jurídica para abrir cuentas bancarias y llevar a cabo otras gestiones legales en nombre de la sociedad.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Empresa Activa\",\r\n          descripcion:\r\n            \"Realice las gestiones necesarias para mantener la sociedad de responsabilidad limitada en regla y en cumplimiento de sus obligaciones legales y fiscales.\",\r\n          documentos: [\r\n            \"Certificados de cumplimiento tributario\",\r\n            \"Comprobante de pagos de la Caja Costarricense de Seguro Social (CCSS)\",\r\n            \"Actas de asambleas ordinarias y extraordinarias\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones Tributarias Mensuales\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda para presentar la declaración de impuestos: asegúrese de utilizar el Número de Identificación Tributaria (NIT) para ingresar.\",\r\n                \"Complete la declaración con los ingresos y gastos del mes: asegúrese de tener todos los recibos y facturas organizados para facilitar este proceso.\",\r\n                \"Pague el impuesto correspondiente antes de la fecha límite (generalmente el último día del mes): puede realizar el pago a través de transferencia bancaria o en cualquier banco autorizado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pago de la Caja Costarricense de Seguro Social (CCSS)\",\r\n              detalle: [\r\n                \"Calcule las cargas sociales que debe pagar cada mes en base a los salarios pagados a los empleados: este cálculo puede hacerlo a través del sistema en línea de la CCSS.\",\r\n                \"Visite el portal de la CCSS o un banco autorizado para realizar el pago de las cargas sociales: el pago debe hacerse antes del día 15 de cada mes.\",\r\n                \"Guarde el comprobante de pago como respaldo para futuras auditorías o revisiones.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de Permisos y Licencias\",\r\n              detalle: [\r\n                \"Revise las fechas de vencimiento de los permisos y licencias: estos permisos generalmente se deben renovar anualmente.\",\r\n                \"Visite la municipalidad y el Ministerio de Salud para presentar los documentos requeridos para la renovación: incluya una copia del permiso anterior y un comprobante de pago de impuestos municipales.\",\r\n                \"Pague las tarifas correspondientes y espere la aprobación de la renovación: asegúrese de guardar los comprobantes de pago y las nuevas licencias.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Asambleas Ordinarias y Extraordinarias\",\r\n              detalle: [\r\n                \"Programe una asamblea ordinaria al menos una vez al año para discutir el estado de la empresa y tomar decisiones importantes: asegúrese de notificar a todos los socios con antelación.\",\r\n                \"Levante un acta de la asamblea y haga que todos los socios la firmen: este documento es necesario para registrar cualquier decisión oficial tomada durante la reunión.\",\r\n                \"Si se requiere una asamblea extraordinaria para decisiones urgentes, notifique a los socios y registre las decisiones en un acta: mantenga estos registros en un lugar seguro.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Contabilidad y Reportes Anuales\",\r\n              detalle: [\r\n                \"Contrate a un contador para llevar los libros contables de la empresa: los libros deben estar actualizados y cumplir con las normativas del Ministerio de Hacienda.\",\r\n                \"Prepare el reporte anual de ingresos y gastos: asegúrese de incluir todas las facturas y recibos de cada transacción durante el año.\",\r\n                \"Presente el reporte anual al Ministerio de Hacienda antes del 31 de marzo: esto se puede hacer a través del portal ATV o directamente con la ayuda del contador.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Cooperativa\",\r\n      descripcion:\r\n        \"Una empresa de tipo Cooperativa es una organización empresarial que se distingue de otras formas de negocio por estar basada en principios de solidaridad, participación democrática y beneficio colectivo. Una cooperativa se constituye como una persona jurídica que pertenece y es gestionada por sus miembros, quienes son, al mismo tiempo, sus propietarios y principales beneficiarios. Su objetivo principal es satisfacer las necesidades y aspiraciones comunes de sus miembros, más que maximizar las ganancias como en las empresas tradicionales.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir el Objeto de la Cooperativa\",\r\n          descripcion:\r\n            \"Determine la misión, visión y el objeto de la cooperativa, asegurándose de que esté alineado con los principios cooperativos.\",\r\n          documentos: [\r\n            \"Misión y visión de la cooperativa\",\r\n            \"Estatutos de la cooperativa\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Reúnase con los miembros fundadores.\",\r\n              detalle: [\r\n                \"Coordine una reunión con todas las personas interesadas en formar la cooperativa: asegúrese de que cada miembro esté comprometido con el propósito colectivo.\",\r\n                \"Defina la misión y visión: asegúrese de que estén alineadas con los principios cooperativos y que reflejen los intereses de los miembros.\",\r\n                \"Documente la misión, visión y objetivos: esto servirá de base para la redacción de los estatutos de la cooperativa.\",\r\n              ],\r\n              caveats: [\r\n                \"La misión y visión deben alinearse con los principios cooperativos para asegurar la coherencia y el compromiso de todos los miembros.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Redacte los estatutos de la cooperativa.\",\r\n              detalle: [\r\n                \"Contrate un abogado especializado en cooperativas para redactar los estatutos: asegúrese de incluir los derechos y responsabilidades de los miembros.\",\r\n                \"Incluya información sobre el proceso de toma de decisiones y estructura de la cooperativa: asegúrese de que todos los miembros entiendan y aprueben estos estatutos.\",\r\n                \"Revise y finalice los estatutos con el abogado y los miembros fundadores: todos deben estar de acuerdo con los términos antes de proceder.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante que los estatutos reflejen claramente los derechos y responsabilidades de los miembros para evitar futuros conflictos.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Constitución de la Cooperativa\",\r\n          descripcion:\r\n            \"Formalice la constitución de la cooperativa mediante una asamblea constitutiva y la firma de los estatutos.\",\r\n          documentos: [\r\n            \"Estatutos de la cooperativa\",\r\n            \"Lista de miembros fundadores\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Organice la asamblea constitutiva.\",\r\n              detalle: [\r\n                \"Prepare una convocatoria para todos los miembros fundadores: asegúrese de que todos estén informados sobre la fecha, hora y lugar de la reunión.\",\r\n                \"Elabore la agenda de la asamblea: incluya puntos clave como la aprobación de los estatutos y la elección de la junta directiva.\",\r\n                \"Asegúrese de contar con quórum para tomar decisiones: verifique cuántos miembros son necesarios para cumplir con los requisitos legales.\",\r\n              ],\r\n              caveats: [\r\n                \"Es esencial contar con quórum en la asamblea constitutiva para que las decisiones tomadas tengan validez legal.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Aprobación de los estatutos y firma de los documentos.\",\r\n              detalle: [\r\n                \"Presente los estatutos a todos los miembros para su aprobación: asegúrese de responder a todas las preguntas y aclarar cualquier duda.\",\r\n                \"Todos los miembros fundadores deben firmar los estatutos: coordine con un notario para que autentique las firmas y asegure la validez del documento.\",\r\n                \"El notario debe emitir una copia certificada del acta de la asamblea: guarde este documento como evidencia de la constitución de la cooperativa.\",\r\n              ],\r\n              caveats: [\r\n                \"La firma ante notario es necesaria para garantizar la validez legal de los estatutos y la constitución de la cooperativa.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Nacional\",\r\n          descripcion:\r\n            \"Registre la cooperativa en el Registro Nacional para formalizar su existencia legal.\",\r\n          documentos: [\r\n            \"Estatutos autenticados\",\r\n            \"Acta de la asamblea constitutiva\",\r\n            \"Lista de miembros fundadores\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Prepare los documentos requeridos para el registro.\",\r\n              detalle: [\r\n                \"Reúna los estatutos autenticados, el acta de la asamblea y la lista de miembros fundadores.\",\r\n                \"Asegúrese de que todos los documentos estén en regla y cumplan con los requisitos legales: consulte con el notario si tiene alguna duda.\",\r\n                \"Realice copias adicionales de todos los documentos: algunas oficinas del Registro Nacional pueden solicitar copias adicionales.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante asegurarse de que todos los documentos estén en regla para evitar retrasos en el proceso de inscripción.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la documentación en el Registro Nacional.\",\r\n              detalle: [\r\n                \"Visite la oficina del Registro Nacional o su sitio web para conocer los requisitos específicos para cooperativas.\",\r\n                \"Complete el formulario de inscripción y adjunte los documentos necesarios: asegúrese de llenar correctamente todos los campos.\",\r\n                \"Pague las tarifas correspondientes al registro de la cooperativa: guarde el recibo de pago como comprobante.\",\r\n              ],\r\n              caveats: [\r\n                \"El registro no será efectivo hasta que se presenten todos los documentos requeridos y se paguen las tarifas correspondientes.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga la personería jurídica de la cooperativa.\",\r\n              detalle: [\r\n                \"Una vez aprobado el registro, solicite una copia de la personería jurídica: este documento es necesario para realizar otras gestiones a nombre de la cooperativa.\",\r\n                \"Guarde la personería jurídica en un lugar seguro: también puede optar por tener una copia digital.\",\r\n                \"Utilice la personería jurídica para abrir cuentas bancarias y realizar otros trámites legales a nombre de la cooperativa.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Afiliación al INFOCOOP\",\r\n          descripcion:\r\n            \"Afíliese al Instituto Nacional de Fomento Cooperativo (INFOCOOP) para recibir apoyo y asesoría.\",\r\n          documentos: [\"Personería jurídica\", \"Formulario de afiliación\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Prepare la documentación para la afiliación.\",\r\n              detalle: [\r\n                \"Complete el formulario de afiliación proporcionado por INFOCOOP: asegúrese de llenar toda la información solicitada.\",\r\n                \"Adjunte una copia de la personería jurídica de la cooperativa: asegúrese de que la copia esté actualizada y sea legible.\",\r\n                \"Prepare una lista de los miembros y sus funciones dentro de la cooperativa: INFOCOOP requiere esta información para el registro.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante que todos los documentos estén actualizados y que la información proporcionada sea precisa para evitar rechazos en la solicitud de afiliación.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la solicitud de afiliación.\",\r\n              detalle: [\r\n                \"Visite la oficina de INFOCOOP o presente la solicitud en línea si está disponible.\",\r\n                \"Entregue toda la documentación requerida y asegúrese de recibir un comprobante de recepción.\",\r\n                \"Espere la respuesta de INFOCOOP sobre la afiliación: el instituto puede requerir información adicional o una visita a la cooperativa.\",\r\n              ],\r\n              caveats: [\r\n                \"INFOCOOP puede solicitar información adicional o una visita a la cooperativa, por lo que es importante estar preparado para cumplir con estos requisitos.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga la certificación de afiliación.\",\r\n              detalle: [\r\n                \"Una vez aprobada la afiliación, solicite una copia de la certificación: este documento es importante para futuras gestiones.\",\r\n                \"Guarde la certificación en un lugar seguro: también puede optar por tener una copia digital.\",\r\n                \"Contacte con INFOCOOP para conocer los programas de apoyo disponibles: ellos pueden ofrecer capacitación y asesoría técnica.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Cooperativa Activa\",\r\n          descripcion:\r\n            \"Realice las gestiones necesarias para mantener la cooperativa activa y en cumplimiento de sus obligaciones legales y fiscales.\",\r\n          documentos: [\r\n            \"Certificados de cumplimiento tributario\",\r\n            \"Comprobante de pagos a la Caja Costarricense de Seguro Social (CCSS)\",\r\n            \"Actas de asambleas ordinarias y extraordinarias\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones Tributarias Mensuales\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda para presentar la declaración de impuestos: asegúrese de utilizar el Número de Identificación Tributaria (NIT) de la cooperativa para ingresar.\",\r\n                \"Complete la declaración con los ingresos y gastos del mes: asegúrese de tener todos los recibos y facturas organizados para facilitar este proceso.\",\r\n                \"Pague el impuesto correspondiente antes de la fecha límite (generalmente el último día del mes): puede realizar el pago a través de transferencia bancaria o en cualquier banco autorizado.\",\r\n              ],\r\n              caveats: [\r\n                \"El pago puntual de los impuestos es esencial para evitar sanciones y mantener la cooperativa en regla con las autoridades fiscales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pago de la Caja Costarricense de Seguro Social (CCSS)\",\r\n              detalle: [\r\n                \"Calcule las cargas sociales que debe pagar cada mes en base a los salarios pagados a los empleados y miembros de la cooperativa: este cálculo puede hacerlo a través del sistema en línea de la CCSS.\",\r\n                \"Visite el portal de la CCSS o un banco autorizado para realizar el pago de las cargas sociales: el pago debe hacerse antes del día 15 de cada mes.\",\r\n                \"Guarde el comprobante de pago como respaldo para futuras auditorías o revisiones.\",\r\n              ],\r\n              caveats: [\r\n                \"El pago de la CCSS es obligatorio para garantizar los beneficios sociales de los miembros y empleados, y evitar sanciones legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de Permisos y Licencias\",\r\n              detalle: [\r\n                \"Revise las fechas de vencimiento de los permisos y licencias de la cooperativa: estos permisos generalmente se deben renovar anualmente.\",\r\n                \"Visite la municipalidad y el Ministerio de Salud para presentar los documentos requeridos para la renovación: incluya una copia del permiso anterior y un comprobante de pago de impuestos municipales.\",\r\n                \"Pague las tarifas correspondientes y espere la aprobación de la renovación: asegúrese de guardar los comprobantes de pago y las nuevas licencias.\",\r\n              ],\r\n              caveats: [\r\n                \"No renovar los permisos y licencias a tiempo puede resultar en multas y en la suspensión de actividades de la cooperativa.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Asambleas Ordinarias y Extraordinarias\",\r\n              detalle: [\r\n                \"Programe una asamblea ordinaria al menos una vez al año para discutir el estado de la cooperativa y tomar decisiones importantes: asegúrese de notificar a todos los miembros con antelación.\",\r\n                \"Levante un acta de la asamblea y haga que todos los miembros la firmen: este documento es necesario para registrar cualquier decisión oficial tomada durante la reunión.\",\r\n                \"Si se requiere una asamblea extraordinaria para decisiones urgentes, notifique a los miembros y registre las decisiones en un acta: mantenga estos registros en un lugar seguro.\",\r\n              ],\r\n              caveats: [\r\n                \"Las asambleas ordinarias y extraordinarias son obligatorias para la toma de decisiones importantes y deben ser debidamente registradas.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Contabilidad y Reportes Anuales\",\r\n              detalle: [\r\n                \"Contrate a un contador para llevar los libros contables de la cooperativa: los libros deben estar actualizados y cumplir con las normativas del Ministerio de Hacienda.\",\r\n                \"Prepare el reporte anual de ingresos y gastos: asegúrese de incluir todas las facturas y recibos de cada transacción durante el año.\",\r\n                \"Presente el reporte anual al Ministerio de Hacienda antes del 31 de marzo: esto se puede hacer a través del portal ATV o directamente con la ayuda del contador.\",\r\n              ],\r\n              caveats: [\r\n                \"La presentación de los reportes financieros anuales es obligatoria y debe ser precisa para evitar sanciones fiscales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Sociedad en Comandita Simple\",\r\n      descripcion:\r\n        \"Una empresa de tipo Sociedad en Comandita Simple es una forma de organización empresarial que combina elementos de una sociedad de personas y una sociedad de capital. Se caracteriza por tener dos tipos de socios, cada uno con diferentes niveles de participación y responsabilidad. Es una opción menos común que otras formas de sociedades, pero puede ser útil en situaciones específicas donde se busca una combinación de gestión activa y aportación de capital sin involucrarse en la administración.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir Nombre de la Empresa\",\r\n          descripcion:\r\n            \"Verifique la disponibilidad del nombre de la empresa en el Registro Nacional.\",\r\n          documentos: [\"Certificación de disponibilidad de nombre\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Visite el sitio web del Registro Nacional.\",\r\n              detalle: [\r\n                \"Ingrese a la página oficial del Registro Nacional: asegúrese de que el sitio web sea legítimo y seguro.\",\r\n                \"Busque la opción de consulta de nombres de sociedades: puede utilizar la barra de navegación o la sección de 'Trámites en Línea'.\",\r\n                \"Asegúrese de que el nombre deseado no esté registrado por otra empresa: intente varias alternativas por si el nombre deseado ya está tomado.\",\r\n              ],\r\n              caveats: [\r\n                \"El nombre de la empresa no debe ser igual o similar a uno ya registrado, para evitar problemas legales o de confusión en el mercado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Realice una consulta de disponibilidad de nombre.\",\r\n              detalle: [\r\n                \"Ingrese el nombre propuesto para la empresa en la barra de búsqueda: asegúrese de escribirlo correctamente para evitar errores en la búsqueda.\",\r\n                \"Espere los resultados de la consulta y revise posibles coincidencias: tome nota de cualquier nombre similar que pueda generar confusión.\",\r\n                \"Si el nombre está disponible, continúe con el proceso de registro: tome una captura de pantalla del resultado como respaldo.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Solicite la certificación para reservar el nombre.\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud para reservar el nombre: asegúrese de ingresar toda la información correctamente.\",\r\n                \"Presente el formulario en la oficina del Registro Nacional o envíelo electrónicamente: si lo hace en persona, verifique el horario de atención.\",\r\n                \"Pague la tarifa correspondiente para garantizar la reserva del nombre: guarde el recibo de pago como comprobante.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Elaborar Escritura de Constitución\",\r\n          descripcion:\r\n            \"Redacte la escritura de constitución con la asistencia de un abogado, que incluya información sobre los socios colectivos y comanditarios, capital aportado y administración.\",\r\n          documentos: [\r\n            \"Escritura de Constitución\",\r\n            \"Identificación de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso:\r\n                \"Contrate a un abogado para la redacción de la escritura de constitución.\",\r\n              detalle: [\r\n                \"Busque un abogado especializado en derecho corporativo: solicite recomendaciones a colegas o busque en directorios de abogados certificados.\",\r\n                \"Programe una reunión para discutir los detalles de la sociedad: prepare información sobre los socios y el capital que aportará cada uno.\",\r\n                \"Asegúrese de llevar documentos de identificación de todos los socios: cédulas de identidad o pasaportes vigentes.\",\r\n              ],\r\n              caveats: [\r\n                \"La asesoría legal es esencial para garantizar que la escritura cumpla con todas las regulaciones legales aplicables.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Detallar las características específicas de la Sociedad en Comandita Simple.\",\r\n              detalle: [\r\n                \"Identificar a los socios colectivos y comanditarios: los socios colectivos tienen responsabilidad ilimitada, mientras que los comanditarios tienen responsabilidad limitada al capital aportado.\",\r\n                \"Especificar el capital aportado por cada socio: detallar las aportaciones en dinero o en especie.\",\r\n                \"Definir la administración de la sociedad: generalmente, los socios colectivos administran la sociedad.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante que todos los socios comprendan sus roles y responsabilidades dentro de la sociedad para evitar conflictos futuros.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Firme la escritura ante notario.\",\r\n              detalle: [\r\n                \"Coordine una cita con el abogado y un notario para firmar la escritura: asegure la presencia de todos los socios.\",\r\n                \"Todos los socios deben presentar su identificación vigente al momento de la firma.\",\r\n                \"El notario dará fe de la autenticidad de las firmas y la validez del documento: solicite copias certificadas para cada socio.\",\r\n              ],\r\n              caveats: [\r\n                \"La firma ante notario es obligatoria para que la escritura tenga validez legal.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Nacional\",\r\n          descripcion:\r\n            \"Registre la sociedad en comandita simple en el Registro Nacional para formalizar la empresa.\",\r\n          documentos: [\r\n            \"Escritura de Constitución autenticada\",\r\n            \"Certificación de disponibilidad de nombre\",\r\n            \"Identificación de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Complete el formulario de inscripción.\",\r\n              detalle: [\r\n                \"Obtenga el formulario de inscripción en el Registro Nacional o descárguelo de su sitio web.\",\r\n                \"Complete la información requerida sobre la sociedad y los socios: asegúrese de la exactitud de los datos.\",\r\n                \"Adjunte los documentos necesarios, incluyendo la escritura autenticada y la certificación de nombre.\",\r\n              ],\r\n              caveats: [\r\n                \"La omisión de información o documentos puede retrasar el proceso de inscripción.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la documentación en el Registro Nacional.\",\r\n              detalle: [\r\n                \"Entregue todos los documentos en la oficina del Registro Nacional: confirme el horario de atención y requisitos específicos.\",\r\n                \"Pague las tarifas correspondientes al registro de la sociedad: guarde el comprobante de pago.\",\r\n                \"Espere la revisión y aprobación de la documentación: el Registro Nacional notificará si hay observaciones o si se requiere información adicional.\",\r\n              ],\r\n              caveats: [\r\n                \"El registro no será efectivo hasta que se completen todos los requisitos y se realicen los pagos correspondientes.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga la personería jurídica.\",\r\n              detalle: [\r\n                \"Una vez inscrita, solicite una copia de la personería jurídica de la sociedad.\",\r\n                \"Guarde este documento en un lugar seguro: es necesario para realizar trámites legales y financieros.\",\r\n                \"Utilice la personería jurídica para abrir cuentas bancarias y gestionar otros asuntos en nombre de la sociedad.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción Tributaria\",\r\n          descripcion:\r\n            \"Registre la sociedad como contribuyente ante el Ministerio de Hacienda y obtenga el Número de Identificación Tributaria (NIT).\",\r\n          documentos: [\r\n            \"Formulario D-140\",\r\n            \"Documento de identidad del representante legal\",\r\n            \"Personería jurídica\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Registro en el Ministerio de Hacienda\",\r\n              detalle: [\r\n                \"Acceda al portal ATV del Ministerio de Hacienda y complete el formulario D-140 con los datos de la sociedad.\",\r\n                \"Adjunte los documentos requeridos: personería jurídica y cédula del representante legal.\",\r\n                \"Espere la confirmación del registro y obtenga el NIT para trámites tributarios.\",\r\n              ],\r\n              caveats: [\r\n                \"El NIT es indispensable para cualquier actividad comercial y tributaria de la sociedad.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Apertura de Cuenta Bancaria\",\r\n          descripcion:\r\n            \"Abra una cuenta bancaria a nombre de la sociedad para manejar sus operaciones financieras.\",\r\n          documentos: [\r\n            \"Escritura de Constitución\",\r\n            \"Personería jurídica\",\r\n            \"Cédula del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Seleccionar el Banco\",\r\n              detalle: [\r\n                \"Investigue las opciones bancarias disponibles que ofrezcan cuentas empresariales adecuadas.\",\r\n                \"Compare tarifas, requisitos y servicios adicionales que puedan ser beneficiosos para la sociedad.\",\r\n                \"Seleccione el banco que mejor se adapte a las necesidades de la empresa.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Apertura de la Cuenta\",\r\n              detalle: [\r\n                \"Contacte al banco y programe una cita para abrir la cuenta empresarial.\",\r\n                \"Presente todos los documentos requeridos: escritura de constitución, personería jurídica y cédula del representante legal.\",\r\n                \"Complete los formularios proporcionados por el banco y realice el depósito inicial si es necesario.\",\r\n              ],\r\n              caveats: [\r\n                \"Asegúrese de entender las condiciones y obligaciones asociadas con la cuenta bancaria empresarial.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Obtención de Permisos y Licencias\",\r\n          descripcion:\r\n            \"Gestione los permisos y licencias necesarios para operar legalmente.\",\r\n          documentos: [\r\n            \"Permiso de funcionamiento del Ministerio de Salud\",\r\n            \"Patente municipal\",\r\n            \"Inscripción en la Caja Costarricense de Seguro Social (CCSS)\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Permiso del Ministerio de Salud\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud de permiso de funcionamiento: disponible en el sitio web del Ministerio de Salud.\",\r\n                \"Adjunte los documentos requeridos: planos del local, certificaciones, etc.\",\r\n                \"Presente la solicitud en la oficina regional correspondiente y pague las tasas aplicables.\",\r\n              ],\r\n              caveats: [\r\n                \"El permiso es obligatorio para actividades que puedan afectar la salud pública.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtención de la Patente Municipal\",\r\n              detalle: [\r\n                \"Visite la municipalidad donde operará la empresa para solicitar la patente comercial.\",\r\n                \"Complete el formulario de solicitud y adjunte los documentos necesarios: permiso del Ministerio de Salud, personería jurídica, etc.\",\r\n                \"Pague las tarifas correspondientes y espere la aprobación de la patente.\",\r\n              ],\r\n              caveats: [\r\n                \"Operar sin patente municipal puede resultar en sanciones y cierre del establecimiento.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Inscripción en la CCSS\",\r\n              detalle: [\r\n                \"Registre la sociedad en la CCSS para cumplir con las obligaciones laborales y sociales.\",\r\n                \"Complete el formulario de inscripción y presente la documentación requerida: personería jurídica, cédulas de los socios, etc.\",\r\n                \"Obtenga el número de patrono y mantenga al día los pagos de cargas sociales.\",\r\n              ],\r\n              caveats: [\r\n                \"El incumplimiento con la CCSS puede generar multas y afectar la reputación de la empresa.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Sociedad Activa\",\r\n          descripcion:\r\n            \"Cumpla con las obligaciones fiscales y administrativas para mantener la sociedad en regla.\",\r\n          documentos: [\r\n            \"Declaraciones tributarias\",\r\n            \"Comprobantes de pago de cargas sociales\",\r\n            \"Renovación de permisos y licencias\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones Tributarias Periódicas\",\r\n              detalle: [\r\n                \"Presente las declaraciones de impuestos según corresponda: mensuales, trimestrales o anuales.\",\r\n                \"Utilice el portal ATV del Ministerio de Hacienda para realizar las declaraciones en línea.\",\r\n                \"Mantenga registros contables actualizados para facilitar el proceso.\",\r\n              ],\r\n              caveats: [\r\n                \"El atraso o incumplimiento en las declaraciones puede generar multas y recargos.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pago de Cargas Sociales\",\r\n              detalle: [\r\n                \"Realice los pagos mensuales a la CCSS en base a los salarios de los empleados.\",\r\n                \"Utilice los sistemas en línea o acuda a las oficinas de la CCSS para efectuar los pagos.\",\r\n                \"Conserve los comprobantes de pago como respaldo.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de Permisos y Licencias\",\r\n              detalle: [\r\n                \"Revise periódicamente las fechas de vencimiento de los permisos y licencias.\",\r\n                \"Realice los trámites de renovación con anticipación para evitar interrupciones en las operaciones.\",\r\n                \"Actualice cualquier cambio en la información de la sociedad ante las autoridades correspondientes.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Actualización Registral\",\r\n              detalle: [\r\n                \"Notifique al Registro Nacional cualquier cambio en la estructura de la sociedad: ingreso o salida de socios, modificaciones en el capital, etc.\",\r\n                \"Presente la documentación correspondiente y pague las tasas requeridas.\",\r\n                \"Mantenga la información de la sociedad actualizada para evitar problemas legales.\",\r\n              ],\r\n              caveats: [\r\n                \"La falta de actualización puede resultar en sanciones y complicaciones legales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Sociedad en Comandita por Acciones\",\r\n      descripcion:\r\n        \"Una Sociedad en Comandita por Acciones (S.C.A.) es una forma de sociedad mercantil que combina características de las sociedades de personas y de capital. En una Sociedad en Comandita por Acciones, existen dos tipos de socios: los comanditados, que participan de manera activa en la gestión de la empresa y tienen responsabilidad ilimitada, y los comanditarios, que son inversores que aportan capital y cuya responsabilidad está limitada al valor de sus acciones. Este tipo de sociedad ofrece flexibilidad en la estructura de la gestión y la participación de los socios.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir Nombre de la Empresa\",\r\n          descripcion:\r\n            \"Verifique la disponibilidad del nombre de la empresa en el Registro Nacional.\",\r\n          documentos: [\"Certificación de disponibilidad de nombre\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Visite el sitio web del Registro Nacional.\",\r\n              detalle: [\r\n                \"Ingrese a la página oficial del Registro Nacional: asegúrese de que el sitio web sea legítimo y seguro.\",\r\n                \"Busque la opción de consulta de nombres de sociedades: puede utilizar la barra de navegación o la sección de 'Trámites en Línea'.\",\r\n                \"Asegúrese de que el nombre deseado no esté registrado por otra empresa: intente varias alternativas por si el nombre deseado ya está tomado.\",\r\n              ],\r\n              caveats: [\r\n                \"El nombre de la empresa no debe ser igual o similar a uno ya registrado, para evitar problemas legales o de confusión en el mercado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Realice una consulta de disponibilidad de nombre.\",\r\n              detalle: [\r\n                \"Ingrese el nombre propuesto para la empresa en la barra de búsqueda: asegúrese de escribirlo correctamente para evitar errores en la búsqueda.\",\r\n                \"Espere los resultados de la consulta y revise posibles coincidencias: tome nota de cualquier nombre similar que pueda generar confusión.\",\r\n                \"Si el nombre está disponible, continúe con el proceso de registro: tome una captura de pantalla del resultado como respaldo.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Solicite la certificación para reservar el nombre.\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud para reservar el nombre: asegúrese de ingresar toda la información correctamente.\",\r\n                \"Presente el formulario en la oficina del Registro Nacional o envíelo electrónicamente: si lo hace en persona, verifique el horario de atención.\",\r\n                \"Pague la tarifa correspondiente para garantizar la reserva del nombre: guarde el recibo de pago como comprobante.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Elaborar Escritura Pública\",\r\n          descripcion:\r\n            \"Redacte la escritura pública de constitución de la sociedad en comandita por acciones con la asistencia de un abogado, incluyendo información sobre los socios comanditados y comanditarios, capital social y administración.\",\r\n          documentos: [\r\n            \"Escritura Pública de Constitución\",\r\n            \"Identificación de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso:\r\n                \"Contrate a un abogado para la redacción de la escritura pública.\",\r\n              detalle: [\r\n                \"Busque un abogado especializado en derecho corporativo: solicite recomendaciones a colegas o busque en directorios de abogados certificados.\",\r\n                \"Programe una reunión para discutir los detalles de la sociedad: prepare una lista de preguntas sobre el proceso y costos involucrados.\",\r\n                \"Asegúrese de llevar información de los socios, incluyendo nombres completos y copias de identificación: distinga entre socios comanditados y comanditarios.\",\r\n              ],\r\n              caveats: [\r\n                \"La escritura pública debe ser redactada por un abogado para garantizar el cumplimiento de la legislación vigente y especificar claramente las responsabilidades de los socios.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Especifique los roles de los socios y el capital inicial.\",\r\n              detalle: [\r\n                \"Identifique a los socios comanditados (con responsabilidad ilimitada) y a los socios comanditarios (con responsabilidad limitada): esto debe quedar claramente establecido en la escritura.\",\r\n                \"Defina la cantidad de acciones y la participación de cada socio comanditario: establezca cómo se dividirán las ganancias y responsabilidades.\",\r\n                \"Determine el capital social y cómo será aportado: asegúrese de que todos los socios estén de acuerdo con la distribución propuesta.\",\r\n              ],\r\n              caveats: [\r\n                \"Es fundamental que los roles y responsabilidades de cada tipo de socio estén claramente definidos para evitar conflictos futuros.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Firme la escritura pública ante notario.\",\r\n              detalle: [\r\n                \"Coordine una cita con el abogado y un notario para firmar la escritura: confirme la disponibilidad de todos los socios antes de fijar la fecha.\",\r\n                \"Asegúrese de que todos los socios estén presentes y lleven identificación: revise los requisitos del notario para asegurarse de cumplirlos.\",\r\n                \"El notario autenticará las firmas y dará fe de la validez del documento: solicite copias certificadas para cada socio.\",\r\n              ],\r\n              caveats: [\r\n                \"La firma ante notario es esencial para darle validez legal a la escritura pública y garantizar que todos los socios estén debidamente representados.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Nacional\",\r\n          descripcion:\r\n            \"Registre la sociedad en comandita por acciones en el Registro Nacional para formalizar la empresa.\",\r\n          documentos: [\r\n            \"Escritura Pública de Constitución autenticada\",\r\n            \"Certificación de disponibilidad de nombre\",\r\n            \"Identificación de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Complete el formulario de inscripción.\",\r\n              detalle: [\r\n                \"Visite la oficina del Registro Nacional o su sitio web para obtener el formulario de inscripción.\",\r\n                \"Complete toda la información requerida sobre los socios y la empresa: asegúrese de que los datos sean precisos.\",\r\n                \"Adjunte todos los documentos necesarios, incluyendo la escritura pública autenticada y la certificación de nombre.\",\r\n              ],\r\n              caveats: [\r\n                \"Es imprescindible adjuntar todos los documentos requeridos para evitar demoras en el proceso de inscripción.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la documentación en el Registro Nacional.\",\r\n              detalle: [\r\n                \"Presente todos los documentos en la oficina del Registro Nacional: verifique el horario de atención para evitar inconvenientes.\",\r\n                \"Pague las tarifas correspondientes al registro de la sociedad: conserve el recibo de pago como comprobante.\",\r\n                \"Espere la revisión de la documentación por parte del Registro Nacional: le indicarán si hay algún problema o si se requiere algún documento adicional.\",\r\n              ],\r\n              caveats: [\r\n                \"El registro no será efectivo hasta que se paguen todas las tarifas correspondientes y se presente toda la documentación requerida.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga la personería jurídica.\",\r\n              detalle: [\r\n                \"Una vez aprobado el registro, solicite una copia de la personería jurídica: este documento es necesario para realizar otras gestiones a nombre de la empresa.\",\r\n                \"Guarde la personería jurídica en un lugar seguro: también puede optar por tener una copia digital.\",\r\n                \"Utilice la personería jurídica para abrir cuentas bancarias y llevar a cabo otras gestiones legales en nombre de la sociedad.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Constitución de la Sociedad en Comandita por Acciones\",\r\n          descripcion:\r\n            \"Formalice la creación de la sociedad mediante la inscripción de la escritura pública y los estatutos en el Registro Nacional.\",\r\n          documentos: [\r\n            \"Escritura Pública de Constitución\",\r\n            \"Estatutos de la sociedad\",\r\n            \"Lista de socios comanditados y comanditarios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Redacción de los Estatutos\",\r\n              detalle: [\r\n                \"Contrate a un abogado para redactar los estatutos de la sociedad, que incluyan el nombre, objeto social, capital social, estructura de administración, y derechos y obligaciones de los socios.\",\r\n                \"Reúnase con los socios para acordar los términos de los estatutos y asegurarse de que todos estén de acuerdo con las condiciones establecidas.\",\r\n                \"Una vez aprobados, firme los estatutos ante un notario público para darles validez legal.\",\r\n              ],\r\n              caveats: [\r\n                \"Es crucial que los estatutos sean claros y precisos, ya que definirán las reglas internas de la sociedad y evitarán posibles conflictos futuros.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Registro en el Registro Nacional\",\r\n              detalle: [\r\n                \"Visite el Registro Nacional o utilice su portal en línea para presentar la escritura pública y los estatutos.\",\r\n                \"Complete el formulario de inscripción y pague las tasas correspondientes al registro de la sociedad.\",\r\n                \"Espere la confirmación del Registro Nacional y guarde el documento de personería jurídica.\",\r\n              ],\r\n              caveats: [\r\n                \"El registro de la escritura y los estatutos debe ser realizado de forma oportuna para que la sociedad sea reconocida legalmente.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción Tributaria\",\r\n          descripcion:\r\n            \"Registre la sociedad como contribuyente ante el Ministerio de Hacienda y obtenga el Número de Identificación Tributaria (NIT).\",\r\n          documentos: [\r\n            \"Formulario D-140\",\r\n            \"Documento de identidad del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Registro en el Ministerio de Hacienda\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda y complete el formulario D-140 con los datos de la sociedad.\",\r\n                \"Adjunte los documentos requeridos, como la cédula del representante legal y la escritura pública de constitución.\",\r\n                \"Espere la confirmación del registro y obtenga el NIT, que se usará para todos los trámites tributarios.\",\r\n              ],\r\n              caveats: [\r\n                \"El NIT es fundamental para cualquier transacción tributaria y debe obtenerse antes de realizar actividades comerciales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Apertura de Cuenta Bancaria\",\r\n          descripcion:\r\n            \"Abra una cuenta bancaria a nombre de la sociedad para manejar sus operaciones financieras.\",\r\n          documentos: [\r\n            \"Escritura Pública de Constitución\",\r\n            \"Personería jurídica\",\r\n            \"Cédula del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Contactar al Banco\",\r\n              detalle: [\r\n                \"Seleccione un banco que ofrezca condiciones adecuadas para la cuenta empresarial y comuníquese con un asesor.\",\r\n                \"Solicite una cita para la apertura de la cuenta: explique que se trata de una sociedad en comandita por acciones recién constituida y que necesita una cuenta para sus operaciones.\",\r\n                \"Prepare los documentos requeridos y preséntese el día de la cita en la sucursal bancaria seleccionada.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante seleccionar un banco que ofrezca productos financieros adecuados para el tipo de actividad que realizará la sociedad.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Apertura de la Cuenta\",\r\n              detalle: [\r\n                \"Complete los formularios del banco para la apertura de la cuenta: asegúrese de proporcionar toda la información de la sociedad, incluyendo el NIT y la personería jurídica.\",\r\n                \"Deposite el monto mínimo requerido para abrir la cuenta, si aplica: este monto puede variar según el banco.\",\r\n                \"Guarde todos los comprobantes relacionados con la apertura de la cuenta, ya que serán necesarios para futuras transacciones.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Sociedad Activa\",\r\n          descripcion:\r\n            \"Cumpla con las obligaciones fiscales y administrativas para mantener la sociedad en regla.\",\r\n          documentos: [\r\n            \"Certificados de cumplimiento tributario\",\r\n            \"Comprobante de pagos de la CCSS\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones Tributarias Mensuales\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda para presentar la declaración de impuestos mensuales: use el NIT para ingresar.\",\r\n                \"Complete la declaración con los ingresos y gastos de la sociedad: tenga a mano los libros contables y facturas.\",\r\n                \"Pague el impuesto antes de la fecha límite para evitar multas: puede realizar el pago en línea o en un banco autorizado.\",\r\n              ],\r\n              caveats: [\r\n                \"Es fundamental realizar las declaraciones tributarias a tiempo para evitar sanciones económicas y posibles problemas legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pago de la CCSS\",\r\n              detalle: [\r\n                \"Calcule las cargas sociales mensuales en base a los salarios de los empleados: este cálculo puede hacerse a través del sistema en línea de la CCSS.\",\r\n                \"Realice el pago de las cargas sociales antes del día 15 de cada mes: puede hacer el pago en línea o en un banco autorizado.\",\r\n                \"Guarde el comprobante del pago como respaldo para auditorías.\",\r\n              ],\r\n              caveats: [\r\n                \"El pago puntual de la CCSS es obligatorio para evitar sanciones y garantizar los beneficios sociales a los empleados.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de Permisos y Licencias\",\r\n              detalle: [\r\n                \"Revise las fechas de vencimiento de los permisos y patentes de la sociedad: generalmente se renuevan anualmente.\",\r\n                \"Visite la municipalidad y el Ministerio de Salud para renovar los permisos: presente el comprobante de pago de impuestos y otros documentos requeridos.\",\r\n                \"Pague las tarifas correspondientes y guarde los comprobantes.\",\r\n              ],\r\n              caveats: [\r\n                \"No renovar los permisos y licencias a tiempo puede resultar en multas y posibles sanciones, incluyendo la suspensión de actividades.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Reportes Financieros Anuales\",\r\n              detalle: [\r\n                \"Contrate a un contador para preparar los estados financieros anuales de la sociedad.\",\r\n                \"Presente el reporte anual de ingresos y gastos al Ministerio de Hacienda antes del 31 de marzo: esto se puede hacer a través del portal ATV o con ayuda del contador.\",\r\n                \"Asegúrese de cumplir con todas las normativas contables y fiscales para evitar sanciones.\",\r\n              ],\r\n              caveats: [\r\n                \"La presentación de reportes financieros anuales es obligatoria y debe ser precisa para evitar sanciones por parte de las autoridades fiscales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Sociedad en Nombre Colectivo\",\r\n      descripcion:\r\n        \"Una Sociedad en Nombre Colectivo es una forma de organización empresarial en la cual dos o más socios se asocian para realizar actividades comerciales bajo una razón social común. Esta sociedad es conocida por la responsabilidad ilimitada y solidaria de sus socios, lo que significa que cada uno de ellos puede ser responsable por las deudas y obligaciones de la empresa con todo su patrimonio personal.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir Nombre de la Empresa\",\r\n          descripcion:\r\n            \"Verifique la disponibilidad del nombre de la empresa en el Registro Nacional.\",\r\n          documentos: [\"Certificación de disponibilidad de nombre\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Visite el sitio web del Registro Nacional.\",\r\n              detalle: [\r\n                \"Ingrese a la página oficial del Registro Nacional: asegúrese de que el sitio web sea legítimo y seguro.\",\r\n                \"Busque la opción de consulta de nombres de sociedades: puede utilizar la barra de navegación o la sección de 'Trámites en Línea'.\",\r\n                \"Asegúrese de que el nombre deseado no esté registrado por otra empresa: intente varias alternativas por si el nombre deseado ya está tomado.\",\r\n              ],\r\n              caveats: [\r\n                \"El nombre de la empresa no debe ser igual o similar a uno ya registrado, para evitar problemas legales o de confusión en el mercado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Realice una consulta de disponibilidad de nombre.\",\r\n              detalle: [\r\n                \"Ingrese el nombre propuesto para la empresa en la barra de búsqueda: asegúrese de escribirlo correctamente para evitar errores en la búsqueda.\",\r\n                \"Espere los resultados de la consulta y revise posibles coincidencias: tome nota de cualquier nombre similar que pueda generar confusión.\",\r\n                \"Si el nombre está disponible, continúe con el proceso de registro: tome una captura de pantalla del resultado como respaldo.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Solicite la certificación para reservar el nombre.\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud para reservar el nombre: asegúrese de ingresar toda la información correctamente.\",\r\n                \"Presente el formulario en la oficina del Registro Nacional o envíelo electrónicamente: si lo hace en persona, verifique el horario de atención.\",\r\n                \"Pague la tarifa correspondiente para garantizar la reserva del nombre: guarde el recibo de pago como comprobante.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Elaborar Contrato Social\",\r\n          descripcion:\r\n            \"Redacte el contrato social con la asistencia de un abogado, que incluya información sobre los socios, capital aportado y administración.\",\r\n          documentos: [\"Contrato Social\", \"Identificación de los socios\"],\r\n          subpasos: [\r\n            {\r\n              subpaso:\r\n                \"Contrate a un abogado para la redacción del contrato social.\",\r\n              detalle: [\r\n                \"Busque un abogado especializado en derecho mercantil: solicite recomendaciones a colegas o busque en directorios de abogados certificados.\",\r\n                \"Contacte al abogado y programe una reunión para discutir los detalles de la sociedad: prepare una lista de preguntas sobre el proceso y costos involucrados.\",\r\n                \"Asegúrese de llevar información de los socios, incluyendo nombres completos y copias de identificación: confirme que cada socio tenga sus documentos en regla.\",\r\n              ],\r\n              caveats: [\r\n                \"Es obligatorio que el contrato social sea redactado por un abogado especializado en derecho mercantil, para garantizar el cumplimiento de la legislación vigente.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso:\r\n                \"Incluya información detallada sobre los socios y el capital aportado.\",\r\n              detalle: [\r\n                \"Especifique la participación y responsabilidades de cada socio: defina claramente cómo se dividirán las ganancias y responsabilidades.\",\r\n                \"Defina el monto del capital aportado por cada socio y cómo será administrado: asegúrese de que todos los socios estén de acuerdo con la distribución propuesta.\",\r\n                \"Incluya la información de contacto de cada socio y sus responsabilidades: verifique que cada socio entienda sus responsabilidades y esté dispuesto a cumplirlas.\",\r\n              ],\r\n              caveats: [\r\n                \"Todos los socios tienen responsabilidad ilimitada y solidaria en una Sociedad en Nombre Colectivo, por lo que es esencial que estén de acuerdo con las condiciones establecidas.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Firme el contrato social ante notario.\",\r\n              detalle: [\r\n                \"Coordine una cita con el abogado y un notario para firmar el contrato: confirme la disponibilidad de todos los socios antes de fijar la fecha.\",\r\n                \"Asegúrese de que todos los socios estén presentes y lleven identificación: revise los requisitos del notario para asegurarse de cumplirlos.\",\r\n                \"El notario autenticará las firmas y dará fe de la validez del documento: solicite una copia certificada del documento para cada socio.\",\r\n              ],\r\n              caveats: [\r\n                \"La firma ante notario es esencial para darle validez legal al contrato social y garantizar que todos los socios estén debidamente representados.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Nacional\",\r\n          descripcion:\r\n            \"Registre la Sociedad en Nombre Colectivo en el Registro Nacional para formalizar la empresa.\",\r\n          documentos: [\r\n            \"Contrato Social autenticado\",\r\n            \"Certificación de disponibilidad de nombre\",\r\n            \"Identificación de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Complete el formulario de inscripción.\",\r\n              detalle: [\r\n                \"Visite la oficina del Registro Nacional o su sitio web para obtener el formulario de inscripción.\",\r\n                \"Complete toda la información requerida sobre los socios y la empresa: asegúrese de que los datos sean precisos.\",\r\n                \"Adjunte todos los documentos necesarios, incluyendo el contrato social autenticado y la certificación de nombre.\",\r\n              ],\r\n              caveats: [\r\n                \"Es imprescindible adjuntar todos los documentos requeridos para evitar demoras en el proceso de inscripción.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presente la documentación en el Registro Nacional.\",\r\n              detalle: [\r\n                \"Presente todos los documentos en la oficina del Registro Nacional: verifique el horario de atención para evitar inconvenientes.\",\r\n                \"Pague las tarifas correspondientes al registro de la sociedad: conserve el recibo de pago como comprobante.\",\r\n                \"Espere la revisión de la documentación por parte del Registro Nacional: ellos le indicarán si hay algún problema o si se requiere algún documento adicional.\",\r\n              ],\r\n              caveats: [\r\n                \"El registro no será efectivo hasta que se paguen todas las tarifas correspondientes y se presente toda la documentación requerida.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtenga la personería jurídica.\",\r\n              detalle: [\r\n                \"Una vez aprobado el registro, solicite una copia de la personería jurídica: este documento es necesario para realizar otras gestiones a nombre de la empresa.\",\r\n                \"Guarde la personería jurídica en un lugar seguro: también puede optar por tener una copia digital.\",\r\n                \"Utilice la personería jurídica para abrir cuentas bancarias y llevar a cabo otras gestiones legales en nombre de la sociedad.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción Tributaria\",\r\n          descripcion:\r\n            \"Registre la sociedad como contribuyente ante el Ministerio de Hacienda y obtenga el Número de Identificación Tributaria (NIT).\",\r\n          documentos: [\r\n            \"Formulario D-140\",\r\n            \"Documento de identidad de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Registro en el Ministerio de Hacienda\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda y complete el formulario D-140 con los datos de la sociedad.\",\r\n                \"Adjunte los documentos requeridos, como las cédulas de los socios y el contrato social.\",\r\n                \"Espere la confirmación del registro y obtenga el NIT, que se usará para todos los trámites tributarios.\",\r\n              ],\r\n              caveats: [\r\n                \"El NIT es fundamental para cualquier transacción tributaria y debe obtenerse antes de realizar actividades comerciales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Apertura de Cuenta Bancaria\",\r\n          descripcion:\r\n            \"Abra una cuenta bancaria a nombre de la sociedad para manejar sus operaciones financieras.\",\r\n          documentos: [\r\n            \"Contrato Social\",\r\n            \"Personería jurídica\",\r\n            \"Cédulas de los socios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Contactar al Banco\",\r\n              detalle: [\r\n                \"Seleccione un banco que ofrezca condiciones adecuadas para la cuenta empresarial y comuníquese con un asesor.\",\r\n                \"Solicite una cita para la apertura de la cuenta: explique que se trata de una Sociedad en Nombre Colectivo recién constituida y que necesita una cuenta para sus operaciones.\",\r\n                \"Prepare los documentos requeridos y preséntese el día de la cita en la sucursal bancaria seleccionada.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante seleccionar un banco que ofrezca productos financieros adecuados para el tipo de actividad que realizará la sociedad.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Apertura de la Cuenta\",\r\n              detalle: [\r\n                \"Complete los formularios del banco para la apertura de la cuenta: asegúrese de proporcionar toda la información de la sociedad, incluyendo el NIT y la personería jurídica.\",\r\n                \"Deposite el monto mínimo requerido para abrir la cuenta, si aplica: este monto puede variar según el banco.\",\r\n                \"Guarde todos los comprobantes relacionados con la apertura de la cuenta, ya que serán necesarios para futuras transacciones.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Obtener Permisos y Licencias Necesarios\",\r\n          descripcion:\r\n            \"Adquiera los permisos y licencias necesarios para operar legalmente.\",\r\n          documentos: [\r\n            \"Permiso de funcionamiento del Ministerio de Salud\",\r\n            \"Patente municipal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Solicitar Permiso de Funcionamiento\",\r\n              detalle: [\r\n                \"Visite el Ministerio de Salud para solicitar el permiso de funcionamiento: lleve consigo la personería jurídica y el contrato social.\",\r\n                \"Complete los formularios requeridos y pague las tarifas correspondientes.\",\r\n                \"Espere la inspección y aprobación por parte del Ministerio de Salud.\",\r\n              ],\r\n              caveats: [\r\n                \"Operar sin el permiso de funcionamiento puede resultar en sanciones y cierre del establecimiento.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtener Patente Municipal\",\r\n              detalle: [\r\n                \"Diríjase a la municipalidad correspondiente para solicitar la patente comercial.\",\r\n                \"Proporcione la documentación requerida, que puede incluir la personería jurídica, contrato social y permiso de funcionamiento.\",\r\n                \"Pague las tarifas correspondientes y espere la emisión de la patente.\",\r\n              ],\r\n              caveats: [\r\n                \"La patente municipal es obligatoria para realizar actividades comerciales en la jurisdicción correspondiente.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Sociedad Activa\",\r\n          descripcion:\r\n            \"Cumpla con las obligaciones fiscales y administrativas para mantener la sociedad en regla.\",\r\n          documentos: [\r\n            \"Certificados de cumplimiento tributario\",\r\n            \"Comprobante de pagos de la CCSS\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones Tributarias Mensuales\",\r\n              detalle: [\r\n                \"Visite el portal de ATV del Ministerio de Hacienda para presentar la declaración de impuestos mensuales: use el NIT para ingresar.\",\r\n                \"Complete la declaración con los ingresos y gastos de la sociedad: tenga a mano los libros contables y facturas.\",\r\n                \"Pague el impuesto antes de la fecha límite para evitar multas: puede realizar el pago en línea o en un banco autorizado.\",\r\n              ],\r\n              caveats: [\r\n                \"Es fundamental realizar las declaraciones tributarias a tiempo para evitar sanciones económicas y posibles problemas legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pago de la CCSS\",\r\n              detalle: [\r\n                \"Calcule las cargas sociales mensuales en base a los salarios de los empleados: este cálculo puede hacerse a través del sistema en línea de la CCSS.\",\r\n                \"Realice el pago de las cargas sociales antes del día 15 de cada mes: puede hacer el pago en línea o en un banco autorizado.\",\r\n                \"Guarde el comprobante del pago como respaldo para auditorías.\",\r\n              ],\r\n              caveats: [\r\n                \"El pago puntual de la CCSS es obligatorio para evitar sanciones y garantizar los beneficios sociales a los empleados.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de Permisos y Licencias\",\r\n              detalle: [\r\n                \"Revise las fechas de vencimiento de los permisos y patentes de la sociedad: generalmente se renuevan anualmente.\",\r\n                \"Visite la municipalidad y el Ministerio de Salud para renovar los permisos: presente el comprobante de pago de impuestos y otros documentos requeridos.\",\r\n                \"Pague las tarifas correspondientes y guarde los comprobantes.\",\r\n              ],\r\n              caveats: [\r\n                \"No renovar los permisos y licencias a tiempo puede resultar en multas y posibles sanciones, incluyendo la suspensión de actividades.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Reportes Financieros Anuales\",\r\n              detalle: [\r\n                \"Contrate a un contador para preparar los estados financieros anuales de la sociedad.\",\r\n                \"Presente el reporte anual de ingresos y gastos al Ministerio de Hacienda antes del 31 de marzo: esto se puede hacer a través del portal ATV o con ayuda del contador.\",\r\n                \"Asegúrese de cumplir con todas las normativas contables y fiscales para evitar sanciones.\",\r\n              ],\r\n              caveats: [\r\n                \"La presentación de reportes financieros anuales es obligatoria y debe ser precisa para evitar sanciones por parte de las autoridades fiscales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Empresa Individual de Responsabilidad Limitada (E.I.R.L.)\",\r\n      descripcion:\r\n        \"Una Empresa Individual de Responsabilidad Limitada (E.I.R.L.) es un tipo de organización empresarial constituida por una sola persona, que tiene la ventaja de ofrecer responsabilidad limitada al propietario. Este tipo de empresa es una persona jurídica independiente del propietario, lo cual significa que sus bienes y obligaciones están separados de los bienes personales del titular, protegiendo así el patrimonio personal del empresario.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir Nombre de la Empresa\",\r\n          descripcion:\r\n            \"Verifique la disponibilidad del nombre de la empresa en el Registro Nacional o Registro de Comercio.\",\r\n          documentos: [\"Certificación de disponibilidad de nombre\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Consultar disponibilidad del nombre\",\r\n              detalle: [\r\n                \"Visite el sitio web del Registro Nacional o Registro de Comercio correspondiente: asegúrese de utilizar fuentes oficiales para la consulta.\",\r\n                \"Utilice la herramienta de búsqueda para verificar si el nombre deseado está disponible: ingrese variantes del nombre para aumentar las opciones.\",\r\n                \"Considere alternativas si el nombre ya está registrado: prepare una lista de nombres alternativos aceptables.\",\r\n              ],\r\n              caveats: [\r\n                \"El nombre debe ser único y no puede generar confusión con otras empresas registradas para evitar problemas legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Reservar el nombre de la empresa\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud de reserva de nombre: proporcione todos los datos solicitados de manera precisa.\",\r\n                \"Pague la tarifa correspondiente a la reserva del nombre: conserve el comprobante de pago.\",\r\n                \"Obtenga la certificación de reserva o disponibilidad del nombre: este documento será necesario para trámites posteriores.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Redactar Estatuto de Constitución\",\r\n          descripcion:\r\n            \"Prepare el estatuto de constitución de la E.I.R.L., que establece las reglas y regulaciones de la empresa.\",\r\n          documentos: [\"Estatuto de Constitución\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Contratar a un abogado\",\r\n              detalle: [\r\n                \"Encuentre un abogado con experiencia en derecho corporativo: solicite referencias o busque en directorios profesionales.\",\r\n                \"Proporcione al abogado la información necesaria para redactar el estatuto: detalles sobre el objeto social, capital, administración, etc.\",\r\n                \"Revise el borrador del estatuto y realice las modificaciones necesarias: asegúrese de que todos los detalles sean correctos.\",\r\n              ],\r\n              caveats: [\r\n                \"Aunque no siempre es obligatorio, se recomienda la asistencia de un abogado para asegurar el cumplimiento legal y evitar errores.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Incluir información esencial en el estatuto\",\r\n              detalle: [\r\n                \"Definir el objeto social de la empresa: detalle las actividades comerciales que realizará.\",\r\n                \"Establecer el capital social y su forma de pago: especifique el monto y cómo se aportará (efectivo, bienes, etc.).\",\r\n                \"Detallar la administración y representación legal de la empresa: indique cómo se tomará las decisiones y quién será el representante legal.\",\r\n              ],\r\n              caveats: [\r\n                \"El estatuto debe cumplir con las leyes y regulaciones vigentes para E.I.R.L. para ser válido legalmente.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Otorgar Escritura Pública\",\r\n          descripcion:\r\n            \"Formalice el estatuto de constitución mediante escritura pública ante un notario.\",\r\n          documentos: [\r\n            \"Estatuto de Constitución\",\r\n            \"Documento de identidad del propietario\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Programar cita con el notario\",\r\n              detalle: [\r\n                \"Seleccione un notario de confianza: puede basarse en recomendaciones o cercanía geográfica.\",\r\n                \"Programe una cita y confirme los documentos necesarios: algunos notarios pueden requerir documentación adicional.\",\r\n                \"Prepare los documentos requeridos para la cita: organícelos en un folder para facilitar el proceso.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Firmar la escritura pública\",\r\n              detalle: [\r\n                \"Asista a la cita con el notario: llegue puntual para evitar retrasos.\",\r\n                \"Presente los documentos y firme la escritura pública: el notario certificará la validez del documento.\",\r\n                \"Pague los honorarios notariales y obtenga una copia autorizada de la escritura: guarde este documento en un lugar seguro.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro de Comercio\",\r\n          descripcion:\r\n            \"Inscriba la empresa en el Registro de Comercio para obtener personalidad jurídica.\",\r\n          documentos: [\r\n            \"Escritura Pública\",\r\n            \"Formulario de inscripción\",\r\n            \"Comprobante de pago de tasas registrales\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Presentar documentos al Registro\",\r\n              detalle: [\r\n                \"Diríjase al Registro de Comercio correspondiente: verifique el horario de atención y si es necesario agendar una cita.\",\r\n                \"Complete el formulario de inscripción con los datos de la empresa: revise que no haya errores antes de entregarlo.\",\r\n                \"Adjunte la escritura pública y otros documentos requeridos: asegúrese de que las copias sean legibles y estén certificadas si es necesario.\",\r\n                \"Pague las tasas de inscripción: conserve el recibo de pago como comprobante.\",\r\n              ],\r\n              caveats: [\r\n                \"Asegúrese de que toda la documentación esté completa para evitar retrasos en el proceso de inscripción.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtener certificación de inscripción\",\r\n              detalle: [\r\n                \"Espere la revisión y aprobación del Registro de Comercio: este proceso puede tomar varios días hábiles.\",\r\n                \"Reciba el certificado de inscripción o personería jurídica: este documento confirma la existencia legal de su empresa.\",\r\n                \"Guarde el certificado para futuros trámites legales: puede ser necesario para abrir cuentas bancarias o contratar servicios.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Obtener Número de Identificación Tributaria (NIT/RUT)\",\r\n          descripcion:\r\n            \"Registre la empresa ante la autoridad tributaria para obtener el número de identificación fiscal.\",\r\n          documentos: [\r\n            \"Formulario de registro tributario\",\r\n            \"Documento de identidad\",\r\n            \"Escritura Pública\",\r\n            \"Certificado de inscripción en el Registro de Comercio\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Registrar la empresa en la entidad tributaria\",\r\n              detalle: [\r\n                \"Visite la oficina de la autoridad tributaria o realice el trámite en línea, si está disponible: verifique los requisitos en el sitio web oficial.\",\r\n                \"Complete el formulario de registro con los datos de la empresa y del propietario: asegúrese de que la información sea exacta.\",\r\n                \"Adjunte los documentos requeridos: verifique si necesitan ser presentados en original o copia certificada.\",\r\n                \"Pague cualquier tasa asociada al registro, si aplica: conserve el comprobante de pago.\",\r\n              ],\r\n              caveats: [\r\n                \"El NIT/RUT es esencial para las operaciones comerciales y tributarias de la empresa; sin él, no podrá facturar legalmente.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtener el certificado de registro tributario\",\r\n              detalle: [\r\n                \"Reciba el NIT/RUT asignado a la empresa: anótelo y memorícelo, ya que lo usará frecuentemente.\",\r\n                \"Guarde el certificado o constancia para futuras gestiones: es posible que necesite presentarlo a proveedores o clientes.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en la Seguridad Social\",\r\n          descripcion:\r\n            \"Registre la empresa y al propietario en la entidad de seguridad social para cumplir con las obligaciones laborales.\",\r\n          documentos: [\r\n            \"Formulario de inscripción\",\r\n            \"Documento de identidad\",\r\n            \"Escritura Pública\",\r\n            \"Certificado de inscripción en el Registro de Comercio\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Registrar en la entidad de seguridad social\",\r\n              detalle: [\r\n                \"Acuda a la oficina de la seguridad social correspondiente: puede ser el Instituto de Seguridad Social o equivalente en su país.\",\r\n                \"Complete el formulario de inscripción para el empleador y los trabajadores, si aplica: incluso si no tiene empleados actualmente.\",\r\n                \"Proporcione la información y documentos requeridos: asegúrese de que estén actualizados y en buen estado.\",\r\n              ],\r\n              caveats: [\r\n                \"Incluso si no tiene empleados, puede ser necesario registrarse para futuras contrataciones y para cotizar como trabajador independiente.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Cumplir con las obligaciones de seguridad social\",\r\n              detalle: [\r\n                \"Realice los pagos correspondientes a la seguridad social: estos pueden ser mensuales o trimestrales.\",\r\n                \"Mantenga registros de los pagos y cumplimiento de obligaciones: esto es crucial en caso de auditorías o inspecciones.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Apertura de Cuenta Bancaria Empresarial\",\r\n          descripcion:\r\n            \"Abra una cuenta bancaria a nombre de la empresa para gestionar las operaciones financieras.\",\r\n          documentos: [\r\n            \"Documento de identidad\",\r\n            \"Escritura Pública\",\r\n            \"Certificado de inscripción en el Registro de Comercio\",\r\n            \"NIT/RUT\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Seleccionar entidad bancaria\",\r\n              detalle: [\r\n                \"Investigue las opciones bancarias y elija la que mejor se adapte a las necesidades de su empresa: considere comisiones, servicios y facilidades.\",\r\n                \"Contacte al banco para conocer los requisitos y procedimientos: algunos bancos ofrecen la posibilidad de iniciar el proceso en línea.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Abrir la cuenta bancaria\",\r\n              detalle: [\r\n                \"Reúna los documentos solicitados por el banco: verifique si requieren originales o copias certificadas.\",\r\n                \"Acuda a la sucursal bancaria para completar el proceso de apertura: puede ser necesario agendar una cita previa.\",\r\n                \"Deposite el monto mínimo requerido, si aplica: algunos bancos exigen un saldo mínimo para cuentas empresariales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Cumplimiento de Obligaciones Legales y Fiscales\",\r\n          descripcion:\r\n            \"Mantenga la empresa en regla cumpliendo con las obligaciones legales y fiscales.\",\r\n          documentos: [\r\n            \"Comprobantes de pago de impuestos\",\r\n            \"Declaraciones tributarias\",\r\n            \"Registros contables\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Declaraciones y pagos de impuestos\",\r\n              detalle: [\r\n                \"Realice las declaraciones tributarias en los plazos establecidos: consulte el calendario fiscal para no omitir fechas importantes.\",\r\n                \"Pague los impuestos correspondientes a tiempo: puede hacerlo en línea o en entidades bancarias autorizadas.\",\r\n                \"Utilice el NIT/RUT para todas las gestiones tributarias: asegúrese de que esté siempre activo y sin problemas.\",\r\n              ],\r\n              caveats: [\r\n                \"El incumplimiento de obligaciones fiscales puede resultar en multas, sanciones y problemas legales que afecten su negocio.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Mantener registros contables\",\r\n              detalle: [\r\n                \"Lleve una contabilidad ordenada y actualizada: esto facilita la toma de decisiones y el cumplimiento fiscal.\",\r\n                \"Contrate a un contador si es necesario: un profesional puede ayudarle a optimizar recursos y evitar errores.\",\r\n                \"Conserve todos los comprobantes y documentos fiscales: esto es crucial en caso de auditorías o requerimientos legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovación de permisos y licencias\",\r\n              detalle: [\r\n                \"Verifique las fechas de vencimiento de permisos o licencias: anótelas en un calendario o sistema de recordatorios.\",\r\n                \"Realice las renovaciones oportunamente para evitar sanciones: algunos trámites pueden iniciarse antes del vencimiento.\",\r\n              ],\r\n              caveats: [\r\n                \"No renovar a tiempo puede llevar a la suspensión de actividades y afectará la reputación de su empresa.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Sociedad Civil\",\r\n      descripcion:\r\n        \"Una empresa de tipo Sociedad Civil es una forma de organización empresarial en la que dos o más personas se asocian con el propósito de llevar a cabo actividades de naturaleza profesional o no comercial, es decir, actividades que no tienen fines mercantiles como objetivo principal. Es comúnmente utilizada por profesionales que desean unir sus esfuerzos para ofrecer servicios especializados, tales como abogados, arquitectos, médicos, contadores, ingenieros, entre otros.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Definir Nombre de la Sociedad\",\r\n          descripcion:\r\n            \"Verifique la disponibilidad del nombre de la sociedad en el Registro Público o entidad correspondiente.\",\r\n          documentos: [\"Certificación de disponibilidad de nombre\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Consultar la disponibilidad del nombre\",\r\n              detalle: [\r\n                \"Acceda al sitio web del Registro Público o acuda personalmente a sus oficinas.\",\r\n                \"Realice una búsqueda para asegurarse de que el nombre deseado no esté ya registrado por otra entidad.\",\r\n                \"Considere varias opciones de nombre en caso de que el primero no esté disponible.\",\r\n              ],\r\n              caveats: [\r\n                \"El nombre elegido no debe ser idéntico o similar a otro ya registrado para evitar conflictos legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Reservar el nombre de la sociedad\",\r\n              detalle: [\r\n                \"Complete el formulario de solicitud de reserva de nombre, si está disponible.\",\r\n                \"Pague la tarifa correspondiente para la reserva del nombre.\",\r\n                \"Obtenga el certificado de reserva de nombre, que tendrá una vigencia limitada.\",\r\n              ],\r\n              caveats: [\r\n                \"La reserva del nombre suele tener una validez temporal; es importante continuar con los trámites dentro de ese periodo.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Redactar el Contrato Social\",\r\n          descripcion:\r\n            \"Elabore el contrato social que establece las bases legales y operativas de la sociedad civil.\",\r\n          documentos: [\"Contrato Social\", \"Identificaciones de los socios\"],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Contratar a un abogado especializado\",\r\n              detalle: [\r\n                \"Busque un abogado con experiencia en derecho civil y societario.\",\r\n                \"Programe una reunión para discutir los términos y condiciones del contrato social.\",\r\n                \"Proporcione al abogado la información necesaria sobre los socios y la sociedad.\",\r\n              ],\r\n              caveats: [\r\n                \"Un abogado especializado garantizará que el contrato cumpla con todas las disposiciones legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Incluir cláusulas esenciales en el contrato\",\r\n              detalle: [\r\n                \"Detallar el objeto social o actividad principal de la sociedad.\",\r\n                \"Especificar las aportaciones de cada socio, ya sean en dinero, bienes o servicios.\",\r\n                \"Establecer la forma de administración y representación de la sociedad.\",\r\n                \"Definir la distribución de utilidades y pérdidas entre los socios.\",\r\n                \"Incluir cláusulas sobre la disolución y liquidación de la sociedad.\",\r\n              ],\r\n              caveats: [\r\n                \"Es fundamental que todas las cláusulas sean claras para evitar malentendidos futuros entre los socios.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Firmar el contrato social ante notario\",\r\n              detalle: [\r\n                \"Coordinar una cita en una notaría pública con todos los socios presentes.\",\r\n                \"Presentar las identificaciones oficiales de cada socio.\",\r\n                \"Firmar el contrato social en presencia del notario, quien dará fe de las firmas.\",\r\n                \"Solicitar copias certificadas del contrato para cada socio y para trámites posteriores.\",\r\n              ],\r\n              caveats: [\r\n                \"La protocolización del contrato ante notario es necesaria para otorgarle validez legal.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Público\",\r\n          descripcion:\r\n            \"Registre el contrato social en el Registro Público de Comercio o entidad equivalente para obtener personalidad jurídica.\",\r\n          documentos: [\r\n            \"Contrato Social protocolizado\",\r\n            \"Solicitud de inscripción\",\r\n            \"Comprobantes de pago de derechos registrales\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Preparar la documentación para el registro\",\r\n              detalle: [\r\n                \"Obtener el contrato social protocolizado y las copias certificadas necesarias.\",\r\n                \"Completar la solicitud de inscripción proporcionada por el Registro Público.\",\r\n                \"Reunir los comprobantes de pago de las tasas o derechos correspondientes.\",\r\n              ],\r\n              caveats: [\r\n                \"Verificar que toda la documentación esté completa y correctamente elaborada para evitar rechazos o retrasos.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presentar la solicitud en el Registro Público\",\r\n              detalle: [\r\n                \"Acudir al Registro Público de Comercio con toda la documentación.\",\r\n                \"Presentar la solicitud y entregar los documentos al registrador.\",\r\n                \"Recibir el acuse de recibo o comprobante de trámite.\",\r\n              ],\r\n              caveats: [\r\n                \"Los tiempos de registro pueden variar; es recomendable consultar los plazos estimados.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtener el folio mercantil\",\r\n              detalle: [\r\n                \"Una vez aprobada la inscripción, obtener el número de folio mercantil asignado a la sociedad.\",\r\n                \"Solicitar una certificación del registro si es necesario para trámites posteriores.\",\r\n              ],\r\n              caveats: [\r\n                \"El folio mercantil es esencial para identificar legalmente a la sociedad en operaciones futuras.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Registro ante la Autoridad Fiscal\",\r\n          descripcion:\r\n            \"Inscriba la sociedad civil en el Registro Federal de Contribuyentes (RFC) para cumplir con las obligaciones fiscales.\",\r\n          documentos: [\r\n            \"Formato de inscripción al RFC\",\r\n            \"Acta constitutiva o contrato social registrado\",\r\n            \"Identificación oficial del representante legal\",\r\n            \"Comprobante de domicilio fiscal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Preparar la solicitud de inscripción\",\r\n              detalle: [\r\n                \"Acceder al portal del Servicio de Administración Tributaria (SAT) o acudir a una oficina local.\",\r\n                \"Completar el formulario de inscripción al RFC con los datos de la sociedad.\",\r\n                \"Reunir los documentos requeridos, incluyendo el contrato social y comprobantes de domicilio.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante que el domicilio fiscal sea válido y esté actualizado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presentar la solicitud y obtener el RFC\",\r\n              detalle: [\r\n                \"Entregar la documentación en la oficina del SAT o seguir el proceso en línea.\",\r\n                \"Esperar la validación de los datos y la emisión del RFC.\",\r\n                \"Imprimir o solicitar la constancia de inscripción al RFC.\",\r\n              ],\r\n              caveats: [\r\n                \"El RFC es indispensable para facturar y cumplir con obligaciones fiscales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Apertura de Cuenta Bancaria\",\r\n          descripcion:\r\n            \"Abra una cuenta bancaria a nombre de la sociedad civil para manejar sus operaciones financieras.\",\r\n          documentos: [\r\n            \"Contrato social registrado\",\r\n            \"Constancia de inscripción al RFC\",\r\n            \"Identificación oficial del representante legal\",\r\n            \"Comprobante de domicilio\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Seleccionar la institución bancaria\",\r\n              detalle: [\r\n                \"Investigar y comparar las ofertas de distintos bancos para cuentas empresariales.\",\r\n                \"Considerar factores como comisiones, servicios adicionales y requisitos de saldo mínimo.\",\r\n              ],\r\n              caveats: [\r\n                \"Elegir un banco que se ajuste a las necesidades financieras de la sociedad.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Reunir los documentos requeridos\",\r\n              detalle: [\r\n                \"Contactar al banco elegido para obtener una lista detallada de los documentos necesarios.\",\r\n                \"Asegurarse de que todos los documentos estén actualizados y en buen estado.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Proceder con la apertura de la cuenta\",\r\n              detalle: [\r\n                \"Acudir a la sucursal bancaria con toda la documentación.\",\r\n                \"Completar los formularios proporcionados por el banco.\",\r\n                \"Proporcionar información sobre la actividad y operaciones de la sociedad.\",\r\n                \"Depositar el monto mínimo de apertura, si se requiere.\",\r\n              ],\r\n              caveats: [\r\n                \"Leer y entender todos los términos y condiciones antes de firmar.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Obtención de Permisos y Licencias (si aplica)\",\r\n          descripcion:\r\n            \"Gestionar los permisos y licencias necesarios según la actividad económica de la sociedad.\",\r\n          documentos: [\r\n            \"Licencia municipal de funcionamiento\",\r\n            \"Permisos sectoriales específicos\",\r\n            \"Certificados ambientales o sanitarios\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Identificar los requisitos legales\",\r\n              detalle: [\r\n                \"Determinar si la actividad de la sociedad requiere permisos especiales.\",\r\n                \"Consultar con autoridades municipales, estatales o federales según corresponda.\",\r\n              ],\r\n              caveats: [\r\n                \"Operar sin los permisos adecuados puede resultar en sanciones o clausuras.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Tramitar los permisos necesarios\",\r\n              detalle: [\r\n                \"Reunir la documentación solicitada por cada entidad reguladora.\",\r\n                \"Completar y presentar las solicitudes correspondientes.\",\r\n                \"Pagar las tarifas o derechos asociados a cada permiso.\",\r\n              ],\r\n              caveats: [\r\n                \"Algunos permisos pueden tardar en emitirse; es recomendable iniciar los trámites con anticipación.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Cumplir con inspecciones o requisitos adicionales\",\r\n              detalle: [\r\n                \"Facilitar las inspecciones que puedan requerir las autoridades.\",\r\n                \"Implementar medidas correctivas si se señalan observaciones.\",\r\n              ],\r\n              caveats: [\r\n                \"El incumplimiento de requisitos puede impedir la obtención de los permisos.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Registro ante la Seguridad Social (si aplica)\",\r\n          descripcion:\r\n            \"Inscriba a la sociedad y a sus empleados en el Instituto Mexicano del Seguro Social (IMSS) u organismo equivalente.\",\r\n          documentos: [\r\n            \"Formato de inscripción patronal\",\r\n            \"Contrato social\",\r\n            \"RFC de la sociedad\",\r\n            \"Identificación del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Realizar la inscripción patronal\",\r\n              detalle: [\r\n                \"Acudir a la oficina del IMSS correspondiente al domicilio fiscal.\",\r\n                \"Completar el formato de inscripción patronal con los datos de la sociedad.\",\r\n                \"Presentar los documentos requeridos.\",\r\n              ],\r\n              caveats: [\r\n                \"La inscripción es obligatoria si la sociedad cuenta con empleados.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Registrar a los empleados\",\r\n              detalle: [\r\n                \"Obtener los datos personales y documentación de los empleados.\",\r\n                \"Dar de alta a cada empleado en el sistema del IMSS.\",\r\n                \"Calcular y pagar las cuotas obrero-patronales mensualmente.\",\r\n              ],\r\n              caveats: [\r\n                \"El incumplimiento en el pago de cuotas puede generar recargos y sanciones.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Cumplimiento de Obligaciones Legales y Fiscales\",\r\n          descripcion:\r\n            \"Mantener al día las obligaciones legales, fiscales y laborales para el correcto funcionamiento de la sociedad.\",\r\n          documentos: [\r\n            \"Declaraciones de impuestos\",\r\n            \"Pagos de cuotas al IMSS\",\r\n            \"Renovación de permisos y licencias\",\r\n            \"Libros corporativos actualizados\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Presentar declaraciones fiscales periódicas\",\r\n              detalle: [\r\n                \"Elaborar y presentar las declaraciones mensuales, trimestrales o anuales según corresponda.\",\r\n                \"Pagar oportunamente los impuestos determinados.\",\r\n              ],\r\n              caveats: [\r\n                \"Las omisiones o retrasos pueden generar multas y recargos.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Actualizar libros y registros corporativos\",\r\n              detalle: [\r\n                \"Mantener al día el libro de actas de asambleas y decisiones de socios.\",\r\n                \"Registrar los cambios en la estructura de la sociedad o en las aportaciones de los socios.\",\r\n              ],\r\n              caveats: [\r\n                \"Los libros corporativos son documentos legales que pueden ser requeridos en auditorías o litigios.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovar permisos y licencias\",\r\n              detalle: [\r\n                \"Verificar las fechas de vigencia de cada permiso o licencia.\",\r\n                \"Iniciar los trámites de renovación con anticipación.\",\r\n                \"Cumplir con nuevos requisitos que puedan establecer las autoridades.\",\r\n              ],\r\n              caveats: [\r\n                \"La operación sin permisos vigentes puede resultar en sanciones.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Cumplir con obligaciones laborales\",\r\n              detalle: [\r\n                \"Pagar salarios y prestaciones conforme a la ley.\",\r\n                \"Respetar los derechos laborales y las condiciones establecidas en los contratos.\",\r\n                \"Llevar registros de asistencia, vacaciones y otros aspectos laborales.\",\r\n              ],\r\n              caveats: [\r\n                \"El incumplimiento de obligaciones laborales puede derivar en demandas o sanciones.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      tipo: \"Sucursal de Sociedad Extranjera\",\r\n      descripcion:\r\n        \"Una empresa de tipo Sucursal de Sociedad Extranjera es una extensión de una empresa extranjera que opera en otro país. Es una entidad jurídica que depende de una sociedad matriz situada en otro país y que tiene como objetivo llevar a cabo actividades comerciales, operativas o administrativas en un territorio diferente al de origen. Aunque la sucursal está registrada y opera en un país extranjero, sigue siendo parte de la sociedad matriz, sin constituir una nueva persona jurídica separada.\",\r\n      pasos: [\r\n        {\r\n          paso: \"Legalizar Documentos de la Sociedad Matriz\",\r\n          descripcion:\r\n            \"Obtener y legalizar los documentos necesarios de la sociedad extranjera en el país de origen.\",\r\n          documentos: [\r\n            \"Certificado de existencia legal de la sociedad matriz\",\r\n            \"Estatutos de la sociedad matriz\",\r\n            \"Acta de acuerdo para establecer la sucursal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Obtener documentos oficiales de la sociedad matriz\",\r\n              detalle: [\r\n                \"Solicitar al Registro Mercantil o equivalente en el país de origen el certificado de existencia legal.\",\r\n                \"Obtener copias certificadas de los estatutos y el acta donde se acuerda la apertura de la sucursal en Costa Rica.\",\r\n              ],\r\n              caveats: [\r\n                \"Los documentos deben ser recientes, generalmente con una antigüedad no mayor a tres meses.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Apostillar o legalizar los documentos\",\r\n              detalle: [\r\n                \"Si el país de origen es miembro del Convenio de La Haya, apostillar los documentos.\",\r\n                \"Si no, legalizar los documentos en el consulado de Costa Rica en el país de origen y luego en el Ministerio de Relaciones Exteriores en Costa Rica.\",\r\n              ],\r\n              caveats: [\r\n                \"Los documentos deben estar apostillados o legalizados para tener validez legal en Costa Rica.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Traducir los documentos al español\",\r\n              detalle: [\r\n                \"Contratar a un traductor oficial en Costa Rica para traducir los documentos al español.\",\r\n                \"Asegurarse de que el traductor esté autorizado por el Ministerio de Relaciones Exteriores de Costa Rica.\",\r\n              ],\r\n              caveats: [\r\n                \"La traducción oficial es necesaria para todos los documentos que no estén en español.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Nombrar Representante Legal en Costa Rica\",\r\n          descripcion:\r\n            \"Designar un representante legal para la sucursal en Costa Rica.\",\r\n          documentos: [\r\n            \"Poder de representación\",\r\n            \"Copia de identificación del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Redactar el poder de representación\",\r\n              detalle: [\r\n                \"La sociedad matriz debe otorgar un poder especial al representante legal en Costa Rica.\",\r\n                \"El poder debe especificar las facultades y responsabilidades del representante.\",\r\n              ],\r\n              caveats: [\r\n                \"El poder debe ser amplio para permitir al representante cumplir con todas las obligaciones legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Legalizar y traducir el poder\",\r\n              detalle: [\r\n                \"Apostillar o legalizar el poder de representación, siguiendo los mismos pasos que con los demás documentos.\",\r\n                \"Traducir oficialmente el poder al español si está en otro idioma.\",\r\n              ],\r\n              caveats: [\r\n                \"El poder debe cumplir con los requisitos de legalización y traducción para ser válido en Costa Rica.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtener identificación del representante\",\r\n              detalle: [\r\n                \"El representante legal debe tener cédula de identidad costarricense o DIMEX si es extranjero residente.\",\r\n                \"Proporcionar copias certificadas de la identificación.\",\r\n              ],\r\n              caveats: [\r\n                \"El representante legal debe estar legalmente autorizado para residir y trabajar en Costa Rica.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Elaborar Escritura Pública de Constitución de la Sucursal\",\r\n          descripcion:\r\n            \"Redactar la escritura pública que formaliza la creación de la sucursal en Costa Rica.\",\r\n          documentos: [\r\n            \"Escritura pública de constitución\",\r\n            \"Documentos legalizados y traducidos de la sociedad matriz\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Contratar a un notario público costarricense\",\r\n              detalle: [\r\n                \"Seleccionar un notario con experiencia en derecho corporativo internacional.\",\r\n                \"Proporcionar al notario todos los documentos legalizados y traducidos.\",\r\n              ],\r\n              caveats: [\r\n                \"Es obligatorio que la escritura pública sea otorgada ante notario en Costa Rica.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Redacción y firma de la escritura\",\r\n              detalle: [\r\n                \"El notario redactará la escritura pública de constitución de la sucursal.\",\r\n                \"El representante legal firmará la escritura ante el notario.\",\r\n              ],\r\n              caveats: [\r\n                \"Verificar que todos los datos estén correctos antes de firmar la escritura.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Inscripción en el Registro Nacional\",\r\n          descripcion:\r\n            \"Registrar la sucursal en el Registro de Personas Jurídicas del Registro Nacional de Costa Rica.\",\r\n          documentos: [\r\n            \"Escritura pública de constitución\",\r\n            \"Formulario de inscripción\",\r\n            \"Recibos de pago de tasas\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Presentar la escritura en el Registro Nacional\",\r\n              detalle: [\r\n                \"El notario o el representante legal presentarán la escritura de constitución en el Registro Nacional.\",\r\n                \"Completar y presentar el formulario de inscripción correspondiente.\",\r\n              ],\r\n              caveats: [\r\n                \"El registro es esencial para que la sucursal tenga personalidad jurídica en Costa Rica.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pagar las tasas registrales\",\r\n              detalle: [\r\n                \"Pagar los derechos de registro y timbres fiscales requeridos.\",\r\n                \"Conservar los comprobantes de pago.\",\r\n              ],\r\n              caveats: [\r\n                \"Los pagos deben realizarse puntualmente para evitar retrasos en el registro.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtener la cédula jurídica\",\r\n              detalle: [\r\n                \"Una vez inscrita, el Registro Nacional emitirá una cédula jurídica para la sucursal.\",\r\n                \"Esta cédula es necesaria para todos los trámites legales y fiscales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Registro Tributario\",\r\n          descripcion:\r\n            \"Registrar la sucursal ante el Ministerio de Hacienda y obtener el Número de Identificación Tributaria (NIT).\",\r\n          documentos: [\r\n            \"Cédula jurídica\",\r\n            \"Formulario D-140\",\r\n            \"Identificación del representante legal\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Completar el formulario D-140\",\r\n              detalle: [\r\n                \"Acceder al portal de Administración Tributaria Virtual (ATV).\",\r\n                \"Completar el formulario con los datos de la sucursal y el representante legal.\",\r\n              ],\r\n              caveats: [\r\n                \"Es importante que la información proporcionada sea precisa y completa.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presentar documentación en el Ministerio de Hacienda\",\r\n              detalle: [\r\n                \"Adjuntar los documentos requeridos, incluyendo la cédula jurídica y la identificación del representante legal.\",\r\n                \"Presentar el formulario y documentos en la oficina tributaria correspondiente o en línea si es posible.\",\r\n              ],\r\n              caveats: [\r\n                \"Sin el NIT, la sucursal no puede operar legalmente ni cumplir con sus obligaciones tributarias.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Obtener el NIT\",\r\n              detalle: [\r\n                \"Una vez aprobado el registro, el Ministerio de Hacienda emitirá el NIT para la sucursal.\",\r\n                \"Este número se usará para todas las obligaciones fiscales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Registro ante la CCSS y otras instituciones\",\r\n          descripcion:\r\n            \"Registrar la sucursal ante la Caja Costarricense de Seguro Social y otras entidades si corresponde.\",\r\n          documentos: [\r\n            \"Cédula jurídica\",\r\n            \"Identificación del representante legal\",\r\n            \"Formulario de inscripción en la CCSS\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Inscripción en la CCSS\",\r\n              detalle: [\r\n                \"Presentar el formulario de inscripción en la oficina de la CCSS correspondiente.\",\r\n                \"Proporcionar la información requerida sobre la sucursal y el personal empleado.\",\r\n              ],\r\n              caveats: [\r\n                \"Es obligatorio para empleadores inscribir a sus trabajadores en la CCSS.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Registro en otras instituciones\",\r\n              detalle: [\r\n                \"Si corresponde, registrar la sucursal en el Instituto Nacional de Seguros (INS) para pólizas de riesgos laborales.\",\r\n                \"Considerar registros adicionales según el sector de actividad (por ejemplo, permisos sanitarios, municipales).\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Apertura de Cuenta Bancaria\",\r\n          descripcion:\r\n            \"Abrir una cuenta bancaria a nombre de la sucursal para operaciones financieras.\",\r\n          documentos: [\r\n            \"Cédula jurídica\",\r\n            \"Identificación del representante legal\",\r\n            \"Escritura pública de constitución\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Seleccionar una entidad bancaria\",\r\n              detalle: [\r\n                \"Investigar opciones bancarias y elegir la que mejor se adapte a las necesidades de la sucursal.\",\r\n                \"Contactar al banco para conocer los requisitos específicos.\",\r\n              ],\r\n              caveats: [\r\n                \"Algunos bancos pueden tener políticas especiales para sucursales de sociedades extranjeras.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Presentar documentos y abrir la cuenta\",\r\n              detalle: [\r\n                \"Proporcionar al banco todos los documentos solicitados.\",\r\n                \"Completar los formularios de apertura de cuenta.\",\r\n              ],\r\n              caveats: [\r\n                \"El proceso puede tomar más tiempo que para personas físicas o sociedades locales.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Obtención de Permisos y Licencias\",\r\n          descripcion:\r\n            \"Obtener los permisos y licencias necesarios para operar según la actividad de la sucursal.\",\r\n          documentos: [\r\n            \"Permiso municipal\",\r\n            \"Permiso sanitario\",\r\n            \"Otros según actividad\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Solicitar permiso municipal\",\r\n              detalle: [\r\n                \"Dirigirse a la municipalidad donde operará la sucursal.\",\r\n                \"Presentar los documentos requeridos y completar los formularios.\",\r\n              ],\r\n              caveats: [\"Los requisitos pueden variar según la municipalidad.\"],\r\n            },\r\n            {\r\n              subpaso: \"Obtener permiso sanitario\",\r\n              detalle: [\r\n                \"Solicitar el permiso al Ministerio de Salud si la actividad lo requiere.\",\r\n                \"Cumplir con las inspecciones y requisitos establecidos.\",\r\n              ],\r\n              caveats: [\r\n                \"Es esencial para actividades que involucren alimentos, salud, etc.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Tramitar otros permisos\",\r\n              detalle: [\r\n                \"Identificar si se requieren permisos adicionales según el sector (por ejemplo, SUGEF, SETENA).\",\r\n                \"Completar los trámites correspondientes.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          paso: \"Mantener la Sucursal Activa\",\r\n          descripcion:\r\n            \"Cumplir con obligaciones fiscales y legales para mantener la sucursal en funcionamiento.\",\r\n          documentos: [\r\n            \"Declaraciones tributarias\",\r\n            \"Pago de cargas sociales\",\r\n            \"Renovación de permisos\",\r\n          ],\r\n          subpasos: [\r\n            {\r\n              subpaso: \"Presentar declaraciones tributarias\",\r\n              detalle: [\r\n                \"Realizar declaraciones de impuestos mensuales y anuales según corresponda.\",\r\n                \"Utilizar el NIT para ingresar al sistema de ATV.\",\r\n              ],\r\n              caveats: [\r\n                \"El incumplimiento puede resultar en multas y sanciones legales.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Pagar cargas sociales\",\r\n              detalle: [\r\n                \"Calcular y pagar mensualmente las cargas sociales a la CCSS.\",\r\n                \"Mantener al día los pagos para evitar intereses y sanciones.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Renovar permisos y licencias\",\r\n              detalle: [\r\n                \"Verificar fechas de vencimiento de permisos municipales y sanitarios.\",\r\n                \"Realizar las renovaciones en tiempo y forma.\",\r\n              ],\r\n            },\r\n            {\r\n              subpaso: \"Preparar estados financieros\",\r\n              detalle: [\r\n                \"Contratar a un contador público autorizado para preparar estados financieros.\",\r\n                \"Presentar los informes requeridos al Ministerio de Hacienda y otras autoridades.\",\r\n              ],\r\n              caveats: [\r\n                \"La transparencia financiera es crucial para cumplir con regulaciones y mantener la confianza de las autoridades.\",\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  // Shader code input\r\n  export let shader;\r\n\r\n  // Built-in uniforms\r\n  let canvas;\r\n  let gl;\r\n  let program;\r\n  let animationFrameId;\r\n  let startTime = Date.now();\r\n  let mouseDown = false;\r\n\r\n  // Uniforms as component parameters\r\n  export let iResolution = { x: window.innerWidth, y: window.innerHeight };\r\n  export let iMouse = { x: 0, y: 0, z: 0, w: 0 };\r\n  export let iChannel0 = null;\r\n  export let iChannel1 = null;\r\n  export let iChannel2 = null;\r\n  export let iChannel3 = null;\r\n\r\n  // Handle mouse events\r\n  function handleMouseMove(event) {\r\n    const rect = canvas.getBoundingClientRect();\r\n    iMouse.x = event.clientX - rect.left;\r\n    iMouse.y = rect.height - (event.clientY - rect.top);\r\n    if (mouseDown) {\r\n      iMouse.z = iMouse.x;\r\n      iMouse.w = iMouse.y;\r\n    }\r\n  }\r\n\r\n  function handleMouseDown(event) {\r\n    mouseDown = true;\r\n    handleMouseMove(event);\r\n  }\r\n\r\n  function handleMouseUp(event) {\r\n    mouseDown = false;\r\n  }\r\n\r\n  // Handle window resize\r\n  function handleResize() {\r\n    iResolution.x = window.innerWidth;\r\n    iResolution.y = window.innerHeight;\r\n    canvas.width = iResolution.x;\r\n    canvas.height = iResolution.y;\r\n    if (gl) {\r\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n  }\r\n\r\n  // Load texture for iChannel uniforms\r\n  function loadTexture(gl, url, unit) {\r\n    const texture = gl.createTexture();\r\n    gl.activeTexture(gl.TEXTURE0 + unit);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n\r\n    // Placeholder while the image loads\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      0,\r\n      gl.RGBA,\r\n      1,\r\n      1,\r\n      0,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      new Uint8Array([0, 0, 0, 255])\r\n    );\r\n\r\n    const image = new Image();\r\n\r\n    // Set crossOrigin only if the URL is absolute\r\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\r\n      image.crossOrigin = \"anonymous\";\r\n    }\r\n\r\n    image.onload = function () {\r\n      gl.activeTexture(gl.TEXTURE0 + unit);\r\n      gl.bindTexture(gl.TEXTURE_2D, texture);\r\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n      gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n        0,\r\n        gl.RGBA,\r\n        gl.RGBA,\r\n        gl.UNSIGNED_BYTE,\r\n        image\r\n      );\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n    };\r\n    image.src = url;\r\n\r\n    return texture;\r\n  }\r\n\r\n  onMount(() => {\r\n    gl = canvas.getContext(\"webgl\");\r\n\r\n    if (!gl) {\r\n      console.error(\"WebGL not supported\");\r\n      return;\r\n    }\r\n\r\n    // Vertex shader source\r\n    const vertexShaderSource = `\r\n      attribute vec2 position;\r\n      void main() {\r\n        gl_Position = vec4(position, 0.0, 1.0);\r\n      }\r\n    `;\r\n\r\n    // Fragment shader source with user-provided shader code\r\n    const fragmentShaderSource = `\r\n      precision mediump float;\r\n      uniform vec3 iResolution;\r\n      uniform float iTime;\r\n      uniform vec4 iMouse;\r\n      uniform sampler2D iChannel0;\r\n      uniform sampler2D iChannel1;\r\n      uniform sampler2D iChannel2;\r\n      uniform sampler2D iChannel3;\r\n\r\n      // User-provided shader code\r\n      ${shader}\r\n\r\n      void main() {\r\n        vec4 color;\r\n        mainImage(color, gl_FragCoord.xy);\r\n        gl_FragColor = color;\r\n      }\r\n    `;\r\n\r\n    // Compile shaders\r\n    function compileShader(type, source) {\r\n      const shader = gl.createShader(type);\r\n      gl.shaderSource(shader, source);\r\n      gl.compileShader(shader);\r\n\r\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        const infoLog = gl.getShaderInfoLog(shader);\r\n        console.error(\"Shader compile failed:\\n\", infoLog);\r\n        console.error(\"Shader source:\\n\", source);\r\n        gl.deleteShader(shader);\r\n        return null;\r\n      }\r\n      return shader;\r\n    }\r\n\r\n    const vertexShader = compileShader(gl.VERTEX_SHADER, vertexShaderSource);\r\n    const fragmentShader = compileShader(\r\n      gl.FRAGMENT_SHADER,\r\n      fragmentShaderSource\r\n    );\r\n\r\n    if (!vertexShader || !fragmentShader) {\r\n      console.error(\r\n        \"Shader compilation failed. Please check your shader code.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Link program\r\n    program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      console.error(\r\n        \"Program failed to link: \" + gl.getProgramInfoLog(program)\r\n      );\r\n      gl.deleteProgram(program);\r\n      return;\r\n    }\r\n\r\n    gl.useProgram(program);\r\n\r\n    // Set up a full-screen quad\r\n    const positionLocation = gl.getAttribLocation(program, \"position\");\r\n    const positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    const positions = new Float32Array([\r\n      -1, -1, 1, -1, -1, 1,\r\n      -1, 1, 1, -1, 1, 1,\r\n    ]);\r\n    gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n    gl.enableVertexAttribArray(positionLocation);\r\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n    // Get uniform locations\r\n    const iResolutionLocation = gl.getUniformLocation(program, \"iResolution\");\r\n    const iTimeLocation = gl.getUniformLocation(program, \"iTime\");\r\n    const iMouseLocation = gl.getUniformLocation(program, \"iMouse\");\r\n    const iChannelLocations = [\r\n      gl.getUniformLocation(program, \"iChannel0\"),\r\n      gl.getUniformLocation(program, \"iChannel1\"),\r\n      gl.getUniformLocation(program, \"iChannel2\"),\r\n      gl.getUniformLocation(program, \"iChannel3\"),\r\n    ];\r\n\r\n    // Load textures for iChannels\r\n    [iChannel0, iChannel1, iChannel2, iChannel3].forEach((channel, index) => {\r\n      if (channel) {\r\n        loadTexture(gl, channel, index);\r\n      }\r\n    });\r\n\r\n    // Event listener for window resize\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize(); // Set initial size\r\n\r\n    // Rendering loop\r\n    function render() {\r\n      const currentTime = Date.now();\r\n      const elapsedTime = (currentTime - startTime) / 1000;\r\n\r\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n      gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n      // Set uniform values\r\n      gl.uniform3f(iResolutionLocation, canvas.width, canvas.height, 1.0);\r\n      gl.uniform1f(iTimeLocation, elapsedTime);\r\n      gl.uniform4f(iMouseLocation, iMouse.x, iMouse.y, iMouse.z, iMouse.w);\r\n\r\n      // Bind iChannel samplers\r\n      iChannelLocations.forEach((location, index) => {\r\n        gl.uniform1i(location, index);\r\n      });\r\n\r\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n      animationFrameId = requestAnimationFrame(render);\r\n    }\r\n\r\n    render();\r\n\r\n    // Event listeners for mouse interactions\r\n    canvas.addEventListener(\"mousemove\", handleMouseMove);\r\n    canvas.addEventListener(\"mousedown\", handleMouseDown);\r\n    canvas.addEventListener(\"mouseup\", handleMouseUp);\r\n  });\r\n\r\n  // Move onDestroy outside of onMount\r\n  onDestroy(() => {\r\n    // Cancel the animation frame\r\n    cancelAnimationFrame(animationFrameId);\r\n\r\n    // Remove event listeners\r\n    canvas.removeEventListener(\"mousemove\", handleMouseMove);\r\n    canvas.removeEventListener(\"mousedown\", handleMouseDown);\r\n    canvas.removeEventListener(\"mouseup\", handleMouseUp);\r\n    window.removeEventListener(\"resize\", handleResize);\r\n\r\n    // Clean up WebGL resources if necessary\r\n    if (gl && program) {\r\n      gl.deleteProgram(program);\r\n    }\r\n  });\r\n</script>\r\n\r\n<!-- Canvas element where the shader will be rendered -->\r\n<canvas bind:this={canvas}></canvas>\r\n\r\n<style>\r\n  canvas {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n  }\r\n</style>\r\n","export default `\r\n#define BURST\r\n#define NUM_LAYERS 2\r\n#define ITERATIONS 20\r\n\r\nmat2 Rot(float a) {\r\n    float s=sin(a), c=cos(a);\r\n    return mat2(c,-s,s,c);\r\n}\r\n\r\nfloat Star(vec2 uv, float a, float sparkle) {\r\n    vec2 av1 = abs(uv);\r\n    vec2 av2 = abs(uv*Rot(a));\r\n    vec2 av = min(av1, av2);\r\n    \r\n    float d = length(uv);\r\n    float star = av1.x*av1.y;\r\n    star = max(star, av2.x*av2.y);\r\n    star = max(0., 1.-star*1e3);\r\n    \r\n    float m = min(5., 1e-2/d);\r\n    \r\n    return m + pow(star, 4.) * sparkle;\r\n}\r\n\r\nfloat Hash21(vec2 p) {\r\n    p = fract(p * vec2(123.34,145.54));\r\n    p += dot(p, p + 45.23);\r\n    return fract(p.x * p.y);\r\n}\r\n\r\nvec3 StarLayer(vec2 uv, float t, float sparkle) {\r\n    vec2 gv = fract(uv) - .5;\r\n    vec2 id = floor(uv);\r\n    vec3 col = vec3(0);\r\n    \r\n    #ifndef BURST\r\n    t = 0.;\r\n    #endif\r\n    \r\n    for(int y = -1; y <= 1; y++) {\r\n        for(int x = -1; x <= 1; x++) {\r\n            vec2 offs = vec2(float(x), float(y));\r\n            float n = Hash21(id - offs);\r\n            vec3 N = fract(n * vec3(10, 100, 1000));\r\n            vec2 p = (N.xy - .5) * .7;\r\n            \r\n            float brightness = Star(gv - p + offs, n * 6.2831 + t, sparkle);\r\n            vec3 star = brightness * vec3(.6 + p.x, .4, .6 + p.y) * N.z * N.z;\r\n            \r\n            star *= 1. + sin((t + n) * 20.) * smoothstep(sin(t) * .5 + .5, 1., fract(10. * n));\r\n            \r\n            float d = length(gv + offs);\r\n            \r\n            col += star * smoothstep(1.5, .8, d);\r\n        }\r\n    }\r\n    return col;\r\n}\r\n\r\nfloat lightCircle(vec2 uv, float radius, vec2 position, float radiusReduction) {\r\n    float d = length(uv - position) * radiusReduction;\r\n    d = smoothstep(d, 0., radius);\r\n    return 1. - d;\r\n}\r\n\r\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\r\n    float mouseDown = step(.1, iMouse.z);\r\n    float scale = mix(.05, .005, mouseDown);\r\n    vec2 look = (iMouse.xy / iResolution.xy - .5) * 3. * mouseDown;\r\n    \r\n    float time = iTime / 50. + 15.;\r\n    vec2 res = iResolution.xy;\r\n    vec2 uv = fragCoord.xy / res - vec2(.5) + look;\r\n    uv *= vec2(res.x / res.y, 1.) * 4. * scale;\r\n    vec2 M = iMouse.xy / iResolution.xy;\r\n    \r\n    M *= 10.;\r\n    \r\n    float t = -iTime / 3.;\r\n    \r\n    float twirl = sin(t * 10.);\r\n    twirl *= twirl * twirl * sin(dot(uv, uv));\r\n    uv *= Rot(-t * .02);\r\n    \r\n    uv *= 2. + sin(t * .05);\r\n    \r\n    vec3 col = vec3(0);\r\n    float speed = -.02;\r\n    #ifdef BURST\r\n    speed = .1;\r\n    float bla = sin(t + sin(t + max(sin(t), 0.1) * .5)) * .5 + .5;\r\n    float d = dot(uv, uv);\r\n    \r\n    float a = atan(uv.x, uv.y);\r\n    uv /= d;\r\n    float burst = sin(iTime * .05);\r\n    uv *= burst + .2;\r\n    #endif\r\n    \r\n    float stp = 1.0 / float(NUM_LAYERS);\r\n    \r\n    for(int layer = 0; layer < NUM_LAYERS; layer++) {\r\n        float i = float(layer) * stp;\r\n        float lt = fract(t * speed + i);\r\n        float scale = mix(10., .25, lt);\r\n        float fade = smoothstep(0., .4, lt) * smoothstep(1., .95, lt); \r\n        vec2 sv = uv * scale + i * 134.53 - M;\r\n        col += StarLayer(sv, t, fade) * fade;\r\n    }\r\n    \r\n    #ifdef BURST\r\n    float burstFade = smoothstep(0., .02, abs(burst));\r\n    float size = .9 * sin(t) + 1.;\r\n    size = max(size, sqrt(size));\r\n    float fade = size / d;\r\n    col *= mix(1., fade, burstFade);\r\n    col += fade * .2 * vec3(1., .5, .1) * bla * burstFade;\r\n    \r\n    t *= 1.5;\r\n    \r\n    a -= M.x * .1;\r\n    float rays = sin(a * 5. + t * 3.) - cos(a * 7. - t);\r\n    rays *= sin(a + t + sin(a * 4.) * 10.) * .5 + .5;\r\n    col += rays * bla * .1 * burstFade;\r\n    col += 1. - burstFade;\r\n    #else\r\n    col *= 4.;\r\n    #endif\r\n    \r\n    float len = dot(uv, uv) * .3 - .4;\r\n    \r\n    vec3 z = sin(time * vec3(.23, .19, .17));\r\n    for (int i = 0; i < ITERATIONS; i++) {\r\n        z += cos(z.zxy + uv.yxy * float(i) * len);\r\n    }\r\n    \r\n    float val = z.r * .06 + .3;\r\n    val -= smoothstep(.01 * cos(iTime), -.03, len * sin(iTime / 100.)) * cos(iTime / 100.) + len * .03 - .4;\r\n    \r\n    float timeSlow = 5.;\r\n    float chosenTime = iTime * timeSlow;\r\n    float radiusReduction = 1.;\r\n    float radius = .1;\r\n    float waveSpeed = 1.;\r\n    float intensityGrowRate = 1.;\r\n    float centralCircleRadius = radius * 2.5;\r\n    float wavingRadius = centralCircleRadius + sin(chosenTime * waveSpeed) / intensityGrowRate;\r\n\r\n    float centralCircle = lightCircle(uv, wavingRadius, vec2(0., 0.), radiusReduction);\r\n    float rightCircle = lightCircle(uv, radius, vec2(cos(chosenTime), 0.), radiusReduction);\r\n    float leftCircle = lightCircle(uv, radius, vec2(sin(chosenTime), 0.), radiusReduction);\r\n    float otherRightCircle = lightCircle(uv, radius, vec2(sin(chosenTime + .75), 0.), radiusReduction);\r\n    float otherLeftCircle = lightCircle(uv, radius, vec2(cos(chosenTime + .75), 0.), radiusReduction);\r\n\r\n    fragColor = vec4(\r\n        rightCircle + leftCircle + centralCircle + otherLeftCircle * 2.,\r\n        rightCircle + rightCircle + centralCircle + otherRightCircle * 2.,\r\n        leftCircle + leftCircle + centralCircle + otherRightCircle + otherLeftCircle,\r\n        1.\r\n    ) / vec4(\r\n        vec3(max(val, .01)) / tan(col / 2. / tan(iTime / 100.)) * vec3(1., 5., 1.),\r\n        1.\r\n    );\r\n}\r\n`","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","<script>\n  import empresaData from \"./empresaData\";\n  import ShaderToy from \"./ShaderToy.svelte\";\n  import VShader from \"./V.shader\";\n\n  // Custom persistent store function\n  import { writable } from \"svelte/store\";\n\n  function persistentWritable(key, initialValue) {\n    const store = writable(initialValue, () => {\n      const json = localStorage.getItem(key);\n      if (json !== null) {\n        store.set(JSON.parse(json));\n      }\n      const unsubscribe = store.subscribe((value) => {\n        localStorage.setItem(key, JSON.stringify(value));\n      });\n      return unsubscribe;\n    });\n    return store;\n  }\n\n  // Initialize persistent stores\n  let selectedEmpresaIndex = persistentWritable(\"selectedEmpresaIndex\", 0);\n  let currentStep = persistentWritable(\"currentStep\", 0);\n  let currentSubStep = persistentWritable(\"currentSubStep\", 0);\n  let currentDetailIndex = persistentWritable(\"currentDetailIndex\", 0);\n\n  // Functions using the stores\n  function nextDetail() {\n    const currentDetailIndexValue = $currentDetailIndex;\n    const currentSubStepValue = $currentSubStep;\n    const currentStepValue = $currentStep;\n    const selectedEmpresaIndexValue = $selectedEmpresaIndex;\n\n    const empresa = empresaData.tipos[selectedEmpresaIndexValue];\n    const currentPaso = empresa.pasos[currentStepValue];\n    const currentSubPaso = currentPaso.subpasos[currentSubStepValue];\n\n    if (currentDetailIndexValue < currentSubPaso.detalle.length - 1) {\n      currentDetailIndex.update((n) => n + 1);\n    } else if (currentSubStepValue < currentPaso.subpasos.length - 1) {\n      currentSubStep.update((n) => n + 1);\n      currentDetailIndex.set(0);\n    } else if (currentStepValue < empresa.pasos.length - 1) {\n      currentStep.update((n) => n + 1);\n      currentSubStep.set(0);\n      currentDetailIndex.set(0);\n    }\n  }\n\n  function previousStep() {\n    let currentDetailIndexValue = $currentDetailIndex;\n    let currentSubStepValue = $currentSubStep;\n    let currentStepValue = $currentStep;\n    let selectedEmpresaIndexValue = $selectedEmpresaIndex;\n\n    if (currentDetailIndexValue > 0) {\n      currentDetailIndex.update((n) => n - 1);\n    } else if (currentSubStepValue > 0) {\n      const newSubStepValue = currentSubStepValue - 1;\n      currentSubStep.set(newSubStepValue);\n\n      const subpasos =\n        empresaData.tipos[selectedEmpresaIndexValue].pasos[currentStepValue]\n          .subpasos;\n      const detalleLength = subpasos[newSubStepValue].detalle.length;\n\n      currentDetailIndex.set(detalleLength - 1);\n    } else if (currentStepValue > 0) {\n      const newStepValue = currentStepValue - 1;\n      currentStep.set(newStepValue);\n\n      const pasos = empresaData.tipos[selectedEmpresaIndexValue].pasos;\n      const subpasos = pasos[newStepValue].subpasos;\n      const newSubStepIndex = subpasos.length - 1;\n      currentSubStep.set(newSubStepIndex);\n\n      const detalleLength = subpasos[newSubStepIndex].detalle.length;\n      currentDetailIndex.set(detalleLength - 1);\n    }\n  }\n\n  function updateSteps(selectedIndex) {\n    selectedEmpresaIndex.set(selectedIndex);\n    currentStep.set(0);\n    currentSubStep.set(0);\n    currentDetailIndex.set(0);\n  }\n</script>\n\n<div class=\"step-container\">\n  <div class=\"empresa-selector\">\n    <label for=\"empresa-tipo\">Seleccione el tipo de empresa:</label>\n    <select\n      id=\"empresa-tipo\"\n      on:change={(e) => updateSteps(e.target.selectedIndex)}\n    >\n      {#each empresaData.tipos as tipo, index}\n        <option selected={$selectedEmpresaIndex === index} value={index}\n          >{tipo.tipo}</option\n        >\n      {/each}\n    </select>\n    <p>\n      {empresaData.tipos[$selectedEmpresaIndex].descripcion}\n    </p>\n  </div>\n\n  <div class=\"step-buttons\">\n    <button\n      on:click={previousStep}\n      disabled={$currentStep === 0 &&\n        $currentSubStep === 0 &&\n        $currentDetailIndex === 0}>Anterior</button\n    >\n    <button\n      on:click={nextDetail}\n      disabled={$currentStep ===\n        empresaData.tipos[$selectedEmpresaIndex].pasos.length - 1 &&\n        $currentSubStep ===\n          empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep].subpasos\n            .length -\n            1 &&\n        $currentDetailIndex ===\n          empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep].subpasos[\n            $currentSubStep\n          ].detalle.length -\n            1}\n    >\n      Siguiente\n    </button>\n  </div>\n\n  {#if empresaData.tipos.length > 0}\n    <div class=\"step-details\" aria-live=\"polite\">\n      <h2>\n        {empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep].paso}\n      </h2>\n      <p>\n        {empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep]\n          .descripcion}\n      </p>\n\n      <div class=\"substeps-list\">\n        <strong>Subpaso Actual:</strong>\n        <h3>\n          {empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep]\n            .subpasos[$currentSubStep].subpaso}\n        </h3>\n\n        <div class=\"substeps-details\">\n          <strong>Detalle Actual:</strong>\n          <p>\n            {empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep]\n              .subpasos[$currentSubStep].detalle[$currentDetailIndex]}\n          </p>\n        </div>\n\n        {#if empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep].subpasos[$currentSubStep].caveats?.length > 0}\n          <div class=\"caveats\">\n            <strong>Caveats:</strong>\n            <ul>\n              {#each empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep].subpasos[$currentSubStep].caveats as caveat}\n                <li>{caveat}</li>\n              {/each}\n            </ul>\n          </div>\n        {/if}\n      </div>\n\n      <div class=\"document-list\">\n        <strong>Documentos necesarios:</strong>\n        <ul>\n          {#each empresaData.tipos[$selectedEmpresaIndex].pasos[$currentStep].documentos as documento}\n            <li class=\"document-list-item\">{documento}</li>\n          {/each}\n        </ul>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<div class=\"shader\">\n  <ShaderToy shader={VShader} iChannel0={'./t1.jpg'} iChannel1={'./t1.jpg'} />\n</div>\n\n<style>\n  .shader {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: -1;\n  }\n\n  .step-container {\n    padding: 3rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 800px;\n    margin: 2rem auto;\n    background-color: #ffffff;\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\n    border-radius: 12px;\n    font-family: Arial, sans-serif;\n  }\n\n  .empresa-selector {\n    margin-bottom: 2rem;\n  }\n\n  .step-details {\n    width: 100%;\n    margin-top: 2rem;\n    padding: 2rem;\n    background-color: #f9f9f9;\n    border-radius: 8px;\n  }\n\n  .step-buttons {\n    position: sticky;\n    top: 0;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    margin-top: 3rem;\n    gap: 1rem;\n  }\n\n  .document-list {\n    margin-top: 2rem;\n    font-size: 1.1rem;\n    line-height: 1.6;\n  }\n\n  .document-list-item {\n    margin-bottom: 1rem;\n  }\n\n  .substeps-list {\n    margin-top: 2rem;\n    font-size: 1.1rem;\n    line-height: 1.6;\n  }\n\n  .substeps-list-item {\n    margin-bottom: 1rem;\n  }\n\n  .substeps-details {\n    margin-left: 2rem;\n    font-size: 1rem;\n    color: #555;\n    line-height: 1.5;\n  }\n\n  .caveats {\n    margin-top: 1rem;\n    font-size: 1rem;\n    color: #d9534f;\n    line-height: 1.5;\n  }\n\n  button {\n    padding: 0.75rem 1.5rem;\n    border: none;\n    background-color: #007bff;\n    color: white;\n    border-radius: 6px;\n    cursor: pointer;\n    transition:\n      background-color 0.3s,\n      transform 0.2s;\n  }\n\n  button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n\n  button:hover:not(:disabled) {\n    background-color: #0056b3;\n    transform: translateY(-2px);\n  }\n\n  @media (max-width: 600px) {\n    .step-container {\n      padding: 2rem;\n    }\n\n    .step-buttons {\n      flex-direction: column;\n      align-items: stretch;\n      gap: 1rem;\n    }\n\n    button {\n      margin-top: 1rem;\n    }\n  }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":[],"mappings":"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","x_google_ignoreList":[0,4]}